? .cproject
Index: src/LogConnection.cc
===================================================================
RCS file: /cvsrootb/saloon/wamas_x/utilities/logging/cpp/logtool/src/LogConnection.cc,v
retrieving revision 1.28
diff -u -r1.28 LogConnection.cc
--- src/LogConnection.cc	14 Aug 2013 11:38:57 -0000	1.28
+++ src/LogConnection.cc	12 Dec 2013 15:23:14 -0000
@@ -114,21 +114,18 @@
 
 bool LogConnection::open()
 {
-    int             optVal;
-    size_t          addrLen;
-    int             af = AF_UNSPEC;
-    struct hostent  *host;
-    char            localHost[MAXHOSTNAMELEN+1];
-   
     if ( sock_ !=  INVALID_SOCKET )
         return connected_;
     
     if ( local_.empty() ) {
+        char            localHost[MAXHOSTNAMELEN+1];
         gethostname(localHost, MAXHOSTNAMELEN);
         localHost[MAXHOSTNAMELEN] = '\0';
         local_ = localHost;
     }
 
+    int             af = AF_UNSPEC;
+    size_t          addrLen;
 #ifdef AF_INET_SUPPORTED
     af = AF_INET;                                          /* INET by default */
     addrLen = sizeof(SockTaddrIn);
@@ -156,46 +153,44 @@
         writeError("SockOpen()");
         return connected_;
     }
-    if (addr_.A.sa_family == AF_UNSPEC) {
-        switch(af) {
-        case AF_UNIX:
+	switch(af) {
+	case AF_UNIX:
 
 #ifdef AF_UNIX_SUPPORTED
-            addr_.Un.sun_family = AF_UNIX;
-            strncpy(addr_.Un.sun_path, serverUnixSock_.c_str(),
-                    sizeof(addr_.Un.sun_path));
-            break;
+		addr_.Un.sun_family = AF_UNIX;
+		strncpy(addr_.Un.sun_path, serverUnixSock_.c_str(),
+				sizeof(addr_.Un.sun_path));
+		break;
 #else /* ! AF_UNIX_SUPPORTED */
-        /* fallthrough */
+	/* fallthrough */
 #endif /* ! AF_UNIX_SUPPORTED */
-        case AF_INET:
-        
+	case AF_INET:
+
 #ifdef AF_INET_SUPPORTED
-            addr_.In.sin_family = AF_INET;
-            addr_.In.sin_port = htons(serverPort_);
-            if ( server_.empty()
-              || (server_ == local_)
-              || (server_ == "localhost")
-              || (server_ == "loopback")
-            ) {
-                addr_.In.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
-            } else {
-                host = gethostbyname(server_.c_str());
-                if (host == NULL) {
-                    break;
-                }
-                addr_.In.sin_addr.s_addr =
-                    ((struct in_addr*)(void*)(host->h_addr))->s_addr;
-            }
-            break;
+		addr_.In.sin_family = AF_INET;
+		addr_.In.sin_port = htons(serverPort_);
+		if ( server_.empty()
+		  || (server_ == local_)
+		  || (server_ == "localhost")
+		  || (server_ == "loopback")
+		) {
+			addr_.In.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+		} else {
+			struct hostent  *host = gethostbyname(server_.c_str());
+			if (host == NULL) {
+				break;
+			}
+			addr_.In.sin_addr.s_addr =
+				((struct in_addr*)(void*)(host->h_addr))->s_addr;
+		}
+		break;
 #else /* ! AF_INET_SUPPORTED */
-        /* fallthrough */
+	/* fallthrough */
 #endif /* ! AF_INET_SUPPORTED */
 
-        default:
-            break;
-        }
-    }
+	default:
+		break;
+	}
 
 #ifdef __bsdi__
     addr_->A.sa_len = addrLen;
@@ -206,7 +201,7 @@
         return connected_;
     }
 
-    optVal = LOG_SOCKBUFSIZE;
+    int optVal = LOG_SOCKBUFSIZE;
     if (SockSetOpt(sock_, SOL_SOCKET, SO_SNDBUF, 
                 (void*)&optVal, sizeof(optVal)) < 0
     ) {
