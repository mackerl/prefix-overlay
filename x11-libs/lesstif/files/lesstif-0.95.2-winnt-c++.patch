diff -ru lesstif-0.95.2.orig/Makefile.in lesstif-0.95.2/Makefile.in
--- lesstif-0.95.2.orig/Makefile.in	2012-08-24 07:46:02 +0200
+++ lesstif-0.95.2/Makefile.in	2012-08-23 18:10:11 +0200
@@ -281,8 +281,8 @@
 		     missing mkinstalldirs \
 		     BUG-REPORTING INSTALL.txt ReleaseNotes.txt
 
-SUBDIRS = . scripts include lib clients doc @BuildTestDir@ autopackage
-DIST_SUBDIRS = scripts include lib clients doc test autopackage
+SUBDIRS = . scripts include lib @BuildTestDir@ autopackage
+DIST_SUBDIRS = scripts include lib test autopackage
 
 #
 # Install some information files
diff -ru lesstif-0.95.2.orig/include/LTconfig.h.in lesstif-0.95.2/include/LTconfig.h.in
--- lesstif-0.95.2.orig/include/LTconfig.h.in	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/include/LTconfig.h.in	2012-08-23 18:10:11 +0200
@@ -394,3 +394,8 @@
 #ifndef __cplusplus
 #undef inline
 #endif
+
+/* When building with parity, use the _XtStrings as defines */
+#ifdef __PARITY__
+# define XTSTRINGDEFINES 1
+#endif
diff -ru lesstif-0.95.2.orig/include/Motif-2.1/Xm/TransltnsP.h lesstif-0.95.2/include/Motif-2.1/Xm/TransltnsP.h
--- lesstif-0.95.2.orig/include/Motif-2.1/Xm/TransltnsP.h	2012-08-24 07:45:12 +0200
+++ lesstif-0.95.2/include/Motif-2.1/Xm/TransltnsP.h	2012-08-24 07:53:03 +0200
@@ -74,6 +74,9 @@
 /* REMARK: In Motif 2.0 _XmScrolledW_ClipWindowTranslationTable is missing. */
 /* REMARK: In Motif 2.0 _XmScrolledW_WorkWindowTranslationTable is missing. */
 
+XMLIBEXPORT extern XmConst char _XmScrolledW_ClipWindowTranslationTable[];
+XMLIBEXPORT extern XmConst char _XmScrolledW_WorkWindowTranslationTable[];
+
 XMLIBEXPORT extern XmConst char _XmSelectioB_defaultTextAccelerators[];
 XMLIBEXPORT extern XmConst char _XmSpinB_defaultTranslations[];
 XMLIBEXPORT extern XmConst char _XmSpinB_defaultAccelerators[];
diff -ru lesstif-0.95.2.orig/include/Motif-2.1/Xm/VendorS.h lesstif-0.95.2/include/Motif-2.1/Xm/VendorS.h
--- lesstif-0.95.2.orig/include/Motif-2.1/Xm/VendorS.h	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/include/Motif-2.1/Xm/VendorS.h	2012-08-23 18:10:11 +0200
@@ -27,12 +27,13 @@
 #define _XM_VENDORS_H
 
 #include <Xm/Xm.h>
+#include <X11/Shell.h>
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
-XMLIBEXPORT extern WidgetClass vendorShellWidgetClass;
+//XMLIBEXPORT extern WidgetClass vendorShellWidgetClass;
 
 typedef struct _XmVendorShellRec       * XmVendorShellWidget;
 typedef struct _XmVendorShellClassRec      * XmVendorShellWidgetClass;
diff -ru lesstif-0.95.2.orig/include/Motif-2.1/Xm/VendorSP.h lesstif-0.95.2/include/Motif-2.1/Xm/VendorSP.h
--- lesstif-0.95.2.orig/include/Motif-2.1/Xm/VendorSP.h	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/include/Motif-2.1/Xm/VendorSP.h	2012-08-23 18:10:11 +0200
@@ -56,7 +56,7 @@
 
 XMLIBEXPORT extern Display *_XmGetDefaultDisplay(void);
 
-XMLIBEXPORT extern VendorShellClassRec  vendorShellClassRec;
+//XMLIBEXPORT extern VendorShellClassRec  vendorShellClassRec;
 
 
 #ifdef __cplusplus
Files lesstif-0.95.2.orig/lib/Dt/.libs/libDtPrint.a and lesstif-0.95.2/lib/Dt/.libs/libDtPrint.a differ
Files lesstif-0.95.2.orig/lib/Mrm-2.1/.libs/libMrm.a and lesstif-0.95.2/lib/Mrm-2.1/.libs/libMrm.a differ
diff -ru lesstif-0.95.2.orig/lib/Mrm-2.1/lookup.c lesstif-0.95.2/lib/Mrm-2.1/lookup.c
--- lesstif-0.95.2.orig/lib/Mrm-2.1/lookup.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Mrm-2.1/lookup.c	2012-08-23 18:10:11 +0200
@@ -25,6 +25,10 @@
  *                    codesmit@southwind.net
  **/
 
+#ifdef WIN32
+# include <X11/Xwindows.h>
+#endif
+
 #include <LTconfig.h>
 
 #include <stdio.h>
@@ -97,10 +101,12 @@
 #include <XmI/DebugUtil.h>
 
 
+#ifndef __cplusplus
 enum
 {
     false, true
 };
+#endif
 
 CreateFunctionsType CreateFunctions[] =
 {
Files lesstif-0.95.2.orig/lib/Uil-2.1/.libs/libUil.a and lesstif-0.95.2/lib/Uil-2.1/.libs/libUil.a differ
diff -ru lesstif-0.95.2.orig/lib/Uil-2.1/uillex.c lesstif-0.95.2/lib/Uil-2.1/uillex.c
--- lesstif-0.95.2.orig/lib/Uil-2.1/uillex.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Uil-2.1/uillex.c	2012-08-23 18:10:11 +0200
@@ -310,7 +310,11 @@
 input(Uil_parse_data *pd)
 {
     int ret;
+	#ifdef __cplusplus
+    Uil_parse_data::_file_data *cf = &pd->file_data[pd->cur_file];
+	#else
     struct _file_data *cf = &pd->file_data[pd->cur_file];
+	#endif
 
     cf->forward++;
     cf->colno++;
@@ -411,7 +415,11 @@
 static void
 unput(Uil_parse_data *pd)
 {
+	#ifdef __cplusplus
+    Uil_parse_data::_file_data *cf = &pd->file_data[pd->cur_file];
+	#else
     struct _file_data *cf = &pd->file_data[pd->cur_file];
+	#endif
 
     if (*cf->forward == '\n')
     {
Files lesstif-0.95.2.orig/lib/Xm-2.1/.libs/libXm.a and lesstif-0.95.2/lib/Xm-2.1/.libs/libXm.a differ
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ArrowB.c lesstif-0.95.2/lib/Xm-2.1/ArrowB.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ArrowB.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ArrowB.c	2012-08-23 18:10:11 +0200
@@ -202,7 +202,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersionDontCheck,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmArrowB_defaultTranslations,
+	/* tm_table              */ (String)_XmArrowB_defaultTranslations,
 	/* query_geometry        */ NULL,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)NULL
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/BulletinBoard.c lesstif-0.95.2/lib/Xm-2.1/BulletinBoard.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/BulletinBoard.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/BulletinBoard.c	2012-08-23 18:10:11 +0200
@@ -46,28 +46,13 @@
 #include <Xm/SpecRenderT.h>
 
 #include <XmI/DebugUtil.h>
+#include <X11/CallbackI.h>
 
 /* #defines being used in this file:
       #ifdef USE_WIDGETS
 */
 
 
-/* We use a 'private', i.e. non-declared but actually
-   exported call from OpenGroup's Intrinsic sources
-   (lib/Xt/Callback.c) in this file.
-   Note that we don't give the precise type here ...
- */
-extern void 
-_XtRemoveAllCallbacks(
-  /* InternalCallbackList *callbacks; */
- void *callbacks);
-
-/* similar for this ... */
-extern void
-_XtAddCallback(XtCallbackList *,
-               XtCallbackProc,
-               XtPointer);
-
 /* Forward Declarations */
 static void class_initialize(void);
 static void class_part_initialize(WidgetClass w_class);
@@ -318,7 +303,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmBulletinB_defaultTranslations,
+	/* tm_table              */ (String)_XmBulletinB_defaultTranslations,
 	/* query_geometry        */ query_geometry,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)NULL /*&_XmBulletinBCoreClassExtRec*/
@@ -563,7 +548,7 @@
 
 	if ((ve = _LtFindVendorExt(new_w)) != NULL)
 	{
-	    _XtAddCallback(&VSEP_FocusMovedCallback(ve),
+	    _XtAddCallback((InternalCallbackList*)&VSEP_FocusMovedCallback(ve),
 			   bbclass->bulletin_board_class.focus_moved_proc,
                            (XtPointer)new_w);
 	}
@@ -595,7 +580,7 @@
     XmFontListFree(BB_TextFontList(w));
     if ((ve = _LtFindVendorExt(w)) != NULL)
       {
-	_XtRemoveAllCallbacks(&VSEP_FocusMovedCallback(ve));
+	_XtRemoveAllCallbacks((InternalCallbackList*)&VSEP_FocusMovedCallback(ve));
 	/* mitch
 	XtRemoveAllCallbacks(ve,XmNfocusMovedCallback);
 	*/
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ComboBox.c lesstif-0.95.2/lib/Xm-2.1/ComboBox.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ComboBox.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ComboBox.c	2012-08-23 18:10:11 +0200
@@ -483,7 +483,7 @@
       NULL,                                   /* accept_focus */
       XtVersion,                              /* version */
       NULL,                                   /* callback offsets */
-      _XmComboBox_defaultTranslations,        /* tm_table */
+      (String)_XmComboBox_defaultTranslations,        /* tm_table */
       QueryGeometry,                          /* query_geometry */
       NULL,                                   /* display_accelerator */
       NULL                                    /* extension */ 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Container.c lesstif-0.95.2/lib/Xm-2.1/Container.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Container.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Container.c	2012-08-23 18:10:11 +0200
@@ -336,7 +336,7 @@
 	{
 		XmNoutlineState, XmCOutlineState, XmRUnsignedChar,
 		sizeof(unsigned char), Offset(outline_state),
-		XmRImmediate, XmCOLLAPSED
+		XmRImmediate, (XtPointer)XmCOLLAPSED
 	},
 	{
 		XmNpositionIndex, XmCPositionIndex, XmRInt,
@@ -408,7 +408,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmContainer_defaultTranslations,
+	/* tm_table              */ (String)_XmContainer_defaultTranslations,
 	/* query_geometry        */ QueryGeometry,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)NULL /*&_XmContainerCoreClassExtRec*/
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/CutPaste.c lesstif-0.95.2/lib/Xm-2.1/CutPaste.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/CutPaste.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/CutPaste.c	2012-08-23 18:10:11 +0200
@@ -1028,7 +1028,7 @@
 	/* XChangeProperty expects a buffer of longs when receiving 32 bits
 	   data, MEUHH */
 	if (sizeof(long) != 4)
-	    convert_buf = XtMalloc(len * sizeof(long));
+	    convert_buf = (long*)XtMalloc(len * sizeof(long));
         for (i = 0; i < len; i++)
             convert_buf[i] = data[i];
 	break;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/DrawingArea.c lesstif-0.95.2/lib/Xm-2.1/DrawingArea.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/DrawingArea.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/DrawingArea.c	2012-08-23 18:10:11 +0200
@@ -198,7 +198,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmDrawingA_defaultTranslations,
+	/* tm_table              */ (String)_XmDrawingA_defaultTranslations,
 	/* query_geometry        */ query_geometry,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)&_XmDrawingACoreClassExtRec
@@ -223,7 +223,7 @@
     },
     /* XmManager class part */
     {
-	/* translations                 */ _XmDrawingA_traversalTranslations,
+	/* translations                 */ (String)_XmDrawingA_traversalTranslations,
         /* syn_resources                */ syn_resources,
         /* num_syn_resources            */ XtNumber(syn_resources),
         /* syn_constraint_resources     */ NULL,
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/DrawnB.c lesstif-0.95.2/lib/Xm-2.1/DrawnB.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/DrawnB.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/DrawnB.c	2012-08-23 18:10:11 +0200
@@ -221,7 +221,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmDrawnB_defaultTranslations,
+	/* tm_table              */ (String)_XmDrawnB_defaultTranslations,
 	/* query_geometry        */ NULL,
 	/* display_accelerator   */ NULL,
 	/* extension             */ NULL
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/DropTrans.c lesstif-0.95.2/lib/Xm-2.1/DropTrans.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/DropTrans.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/DropTrans.c	2012-08-23 18:10:11 +0200
@@ -332,7 +332,7 @@
 					DC_ICCHandle(dc),
 					DT_CurTargets(dt),
 					lst->num_transfers, select_callback,
-					(XtPointer)DT_CurClientData(dt),
+					(XtPointer*)DT_CurClientData(dt),
 					DT_Timestamp(dt));
     }
     else
@@ -341,7 +341,7 @@
 			     DC_ICCHandle(dc),
 			     DT_CurTargets(dt),
 			     lst->num_transfers, select_callback,
-			     (XtPointer)DT_CurClientData(dt),
+			     (XtPointer*)DT_CurClientData(dt),
 			     DT_Timestamp(dt));
     }
 }
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/FontList.c lesstif-0.95.2/lib/Xm-2.1/FontList.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/FontList.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/FontList.c	2012-08-23 18:10:11 +0200
@@ -51,7 +51,7 @@
 
 	r->count = 1;		/* This is a usage count, initialise to 1. */
 
-	r->type = XmAS_IS;
+	r->type = (XmFontType)XmAS_IS;
 	r->rendition_foreground = XmAS_IS;
 	r->rendition_background = XmAS_IS;
 	r->load_model = XmAS_IS;
@@ -126,7 +126,7 @@
 
 	defaultEntry->tag = XtNewString(XmFONTLIST_DEFAULT_TAG);
 	defaultEntry->type = XmFONT_IS_FONT;
-	defaultEntry->font = (XtPointer)fs;
+	defaultEntry->font = (XFontSet)fs;
 #if (XmVERSION > 1)
 	defaultEntry->rendition_background = XmAS_IS;
 	defaultEntry->rendition_foreground = XmAS_IS;
@@ -277,7 +277,7 @@
 
 	entry->tag = XtNewString(charset);
 	entry->type = XmFONT_IS_FONT;
-	entry->font = (XtPointer)font;
+	entry->font = (XFontSet)font;
 
 	r = XmFontListAppendEntry(NULL, entry);
 
@@ -307,7 +307,7 @@
 
 	entry->tag = XtNewString(charset);
 	entry->type = XmFONT_IS_XFT;
-	entry->xft_font = (XtPointer)font;
+	entry->xft_font = (XftFont*)font;
 	entry->font = NULL;
 
 	r = XmFontListAppendEntry(NULL, entry);
@@ -343,7 +343,7 @@
 	entry = _XmFontListEntryCreate();
 	entry->tag = XtNewString(charset);
 	entry->type = XmFONT_IS_FONT;
-	entry->font = (XtPointer)font;
+	entry->font = (XFontSet)font;
 
 	newFontList = XmFontListAppendEntry(old, entry);
 	/* amai: de-allocation of 'old' is done by XmFontListAppendEntry() */
@@ -398,7 +398,7 @@
 
 	entry->tag  = XtNewString(tag);
 	entry->type = type;
-	entry->font = font;
+	entry->font = (XFontSet)font;
 
 	DEBUGOUT(_LtDebug(__FILE__, NULL, "XmFontListEntryCreate() -> %p\n", entry));
 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/GrabShell.c lesstif-0.95.2/lib/Xm-2.1/GrabShell.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/GrabShell.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/GrabShell.c	2012-08-23 18:10:11 +0200
@@ -40,7 +40,6 @@
 
 #include <XmI/DebugUtil.h>
 
-
 /*
   MODULE: GrabShell.c
   DESCRIPTION:
@@ -82,7 +81,7 @@
 static XtGeometryResult GeometryManager(Widget w, 
    XtWidgetGeometry *request, 
    XtWidgetGeometry *reply);
-static int IgnoreError(Display *d, XErrorEvent *e);
+static int XmIgnoreErr(Display *d, XErrorEvent *e);
 static void Initialize(Widget request, 
    Widget c_new,
    ArgList args,
@@ -256,7 +255,7 @@
       NULL,                                   /* accept_focus */
       XtVersion,                              /* version */
       NULL,                                   /* callback offsets */
-      _XmGrabShell_translations,              /* tm_table */
+      (String)_XmGrabShell_translations,              /* tm_table */
       NULL,                                   /* query_geometry */
       NULL,                                   /* display_accelerator */
       NULL                                    /* extension */ 
@@ -725,19 +724,19 @@
 }
 
 /*
-  FUNCTION: IgnoreError
+  FUNCTION: XmIgnoreErr
   SYNOPSIS: 
-  DESCRIPTION: static int IgnoreError(Display *d, XErrorEvent *e)
+  DESCRIPTION: static int XmIgnoreErr(Display *d, XErrorEvent *e)
   This function is used to ignore X errors.  Typically, this will occur
   when doing grabs.  I wonder if ignoring errors is bad idea.  Any one
   have any thoughts on the issue.
   END:
 */
 static int 
-IgnoreError(Display *d, XErrorEvent *e)
+XmIgnoreErr(Display *d, XErrorEvent *e)
 {
 
-   DEBUGOUT(_LtDebug(__FILE__, NULL, "In IgnoreError\n"));
+   DEBUGOUT(_LtDebug(__FILE__, NULL, "In XmIgnoreErr\n"));
    DEBUGOUT(_LtDebug(__FILE__, NULL, 
                      "type: %d\n"
                      "display: %p\n"
@@ -877,7 +876,7 @@
    _XmGrabShellFocus(w, XmGRAB_SHELL_FOCUS_SAVE, GS_PostTime(w));
 
    /* Setup ignore X error routine */
-   old_handler = XSetErrorHandler(IgnoreError);
+   old_handler = XSetErrorHandler(XmIgnoreErr);
 
    _XmGrabShellFocus(w, XmGRAB_SHELL_FOCUS_SET, CurrentTime);
 
@@ -928,7 +927,7 @@
    GS_Mapped(w) = False;
 
    /* Setup ignore X error routine */
-   old_handler = XSetErrorHandler(IgnoreError);
+   old_handler = XSetErrorHandler(XmIgnoreErr);
 
    /* restore focus */
    _XmGrabShellFocus(w, XmGRAB_SHELL_FOCUS_RESTORE, GS_UnpostTime(w));
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ImageCache.c lesstif-0.95.2/lib/Xm-2.1/ImageCache.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ImageCache.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ImageCache.c	2012-08-23 18:10:11 +0200
@@ -805,7 +805,13 @@
  * Initializes the image and pixmap caches. In addition, it puts the default
  * images into the cache.
  */
+#ifdef __cplusplus
+extern "C" {
+#endif
 extern void _XInitImageFuncPtrs(XImage *);
+#ifdef __cplusplus
+} // extern "C"
+#endif
 
 static void
 LTSetupImageCache(void)
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/LTV6Editres.c lesstif-0.95.2/lib/Xm-2.1/LTV6Editres.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/LTV6Editres.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/LTV6Editres.c	2012-08-23 18:10:11 +0200
@@ -312,7 +312,7 @@
 	{
 	    _LesstifEditResResetStream(&globals.stream);
 	    _LesstifEditResPut8(&globals.stream, CURRENT_PROTOCOL_VERSION);
-	    SendCommand(w, res_comm, ident, ProtocolMismatch, &globals.stream);
+	    SendCommand(w, res_comm, ident, (EditresCommand)ProtocolMismatch, &globals.stream);
 	    return;
 	}
 
@@ -608,7 +608,7 @@
 
     _LesstifEditResResetStream(&globals.stream);
     if ((str = (*func) (w, event, &globals.stream)) == NULL)
-	SendCommand(w, sel, ident, PartialSuccess, &globals.stream);
+	SendCommand(w, sel, ident, (EditresCommand)PartialSuccess, &globals.stream);
     else
     {
 	SendFailure(w, sel, ident, str);
@@ -677,7 +677,7 @@
 {
     _LesstifEditResResetStream(&globals.stream);
     _LesstifEditResPutString8(&globals.stream, str);
-    SendCommand(w, sel, ident, Failure, &globals.stream);
+    SendCommand(w, sel, ident, (EditresCommand)Failure, &globals.stream);
 }
 
 /*    Function Name: BuildReturnPacket
@@ -931,14 +931,14 @@
  *    Description: Handles X Toolkit Errors.
  *    Arguments: name - name of the error.
  *               type - type of the error.
- *               class - class of the error.
+ *               eclass - eclass of the error.
  *               msg - the default message.
  *               params, num_params - the extra parameters for this message.
  *    Returns: none.
  */
 
 static void
-HandleToolkitErrors(String name, String type, String class, String msg,
+HandleToolkitErrors(String name, String type, String eclass, String msg,
 		    String *params, Cardinal *num_params)
 {
     SVErrorInfo *info = &globals.error_info;
@@ -961,7 +961,7 @@
     }
     else
 	sprintf(buf, "Name: %s, Type: %s, Class: %s, Msg: %s",
-		name, type, class, msg);
+		name, type, eclass, msg);
 
     /*
      * Insert this info into the protocol stream, and update the count.
@@ -1095,7 +1095,7 @@
     int i, num_children;
     Widget *children;
     unsigned long window;
-    char *class;
+    char *cls;
 
     (*count)++;
 
@@ -1104,11 +1104,11 @@
     _LesstifEditResPutString8(stream, XtName(w));	/* Insert name */
 
     if (isApplicationShell(w))
-	class = ((ApplicationShellWidget)w)->application.class;
+	cls = ((ApplicationShellWidget)w)->application.c_class;
     else
-	class = XtClass(w)->core_class.class_name;
+	cls = XtClass(w)->core_class.class_name;
 
-    _LesstifEditResPutString8(stream, class);	/* Insert class */
+    _LesstifEditResPutString8(stream, cls);	/* Insert class */
 
     if (XtIsWidget(w))
       {
@@ -1932,7 +1932,7 @@
 	*(EditresBlock *)(to_val->addr) = block;
     }
     else
-	to_val->addr = (XtPointer)block;
+	to_val->addr = (XPointer)block;
 
     to_val->size = sizeof(EditresBlock);
     return (True);
@@ -1972,7 +1972,7 @@
 static void
 _LesstifEditResCvtWarningHandler(String name,
 				 String type,
-				 String class,
+				 String cls,
 				 String def,
 				 String *params,
 				 Cardinal *num_params)
@@ -2093,7 +2093,7 @@
 	old_handler = XtAppSetWarningMsgHandler(XtWidgetToApplicationContext(w),
 					     _LesstifEditResCvtWarningHandler);
 	from.size = res->resource_size;
-	from.addr = (caddr_t)&value;
+	from.addr = (XPointer)&value;
 	to.addr = NULL;
 	to.size = 0;
 	to_color.addr = NULL;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Label.c lesstif-0.95.2/lib/Xm-2.1/Label.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Label.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Label.c	2012-08-23 18:10:11 +0200
@@ -1163,7 +1163,7 @@
 			char *name ;
 			Pixel fg, bg ;
 			int hotx, hoty ;
-			u_int wid, hgt ;
+			unsigned int wid, hgt ;
 
 			if (cliprect.x < Lab_TextRect_x(w)) {
 				cliprect.width -= Lab_TextRect_x(w) - cliprect.x;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/List.c lesstif-0.95.2/lib/Xm-2.1/List.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/List.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/List.c	2012-08-23 18:10:11 +0200
@@ -477,7 +477,7 @@
       /* accept_focus          */ NULL,
       /* version               */ XtVersion,
       /* callback offsets      */ NULL,
-      /* tm_table              */ _XmList_ListXlations1,
+      /* tm_table              */ (String)_XmList_ListXlations1,
       /* query_geometry        */ query_geometry,
       /* display_accelerator   */ NULL,
       /* extension             */ (XtPointer)&_XmListCoreClassExtRec
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Manager.c lesstif-0.95.2/lib/Xm-2.1/Manager.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Manager.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Manager.c	2012-08-23 18:10:11 +0200
@@ -429,7 +429,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmManager_defaultTranslations,
+	/* tm_table              */ (String)_XmManager_defaultTranslations,
 	/* query_geometry        */ NULL,
 	/* display_accelerator   */ NULL /*XtInheritDisplayAccelerator*/,
 	/* extension             */ (XtPointer)&_XmManagerCoreClassExtRec
@@ -454,7 +454,7 @@
     },
     /* XmManager class part */
     {
-	/* translations                 */ _XmManager_managerTraversalTranslations,
+	/* translations                 */ (String)_XmManager_managerTraversalTranslations,
         /* syn_resources                */ syn_resources,
         /* num_syn_resources            */ XtNumber(syn_resources),
         /* syn_constraint_resources     */ NULL,
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/MenuShell.c lesstif-0.95.2/lib/Xm-2.1/MenuShell.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/MenuShell.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/MenuShell.c	2012-08-23 18:10:11 +0200
@@ -162,7 +162,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmMenuShell_translations,
+	/* tm_table              */ (String)_XmMenuShell_translations,
 	/* query_geometry        */ NULL,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)&_XmMenuSCoreClassExtRec
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Primitive.c lesstif-0.95.2/lib/Xm-2.1/Primitive.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Primitive.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Primitive.c	2012-08-23 18:10:11 +0200
@@ -344,7 +344,7 @@
     {
 	/* border_highlight      */ primitive_border_highlight,
 	/* border_unhighlight    */ primitive_border_unhighlight,
-	/* translations          */ _XmPrimitive_defaultTranslations,
+	/* translations          */ (String)_XmPrimitive_defaultTranslations,
 	/* arm_and_activate_proc */ NULL,
 	/* Synthetic Resources   */ syn_resources,
 	/* num syn res           */ XtNumber(syn_resources),
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Print.c lesstif-0.95.2/lib/Xm-2.1/Print.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Print.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Print.c	2012-08-23 18:10:11 +0200
@@ -487,7 +487,7 @@
 #else
 	/* Non-UNIX case: currently just fail */
 	return False;
-#warning "You are not on an unix-like platform"
+//#warning "You are not on an unix-like platform"
 #endif /* !UNIXLIKE */
 }
 #else /* ifdef HAVE_LIB_XP */
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/PrintShell.c lesstif-0.95.2/lib/Xm-2.1/PrintShell.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/PrintShell.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/PrintShell.c	2012-08-23 18:10:11 +0200
@@ -254,7 +254,7 @@
 _XmStoreWidgetContext(Widget w, XPContext c)
 {
 	nfields++;
-	wctxt = (WidgetContext *)XtRealloc((XtPointer)wctxt, sizeof(WidgetContext) * nfields);
+	wctxt = (WidgetContext *)XtRealloc((char*)wctxt, sizeof(WidgetContext) * nfields);
 	wctxt[nfields-1].w = w;
 	wctxt[nfields-1].c = c;
 }
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Protocols.c lesstif-0.95.2/lib/Xm-2.1/Protocols.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Protocols.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Protocols.c	2012-08-23 18:10:11 +0200
@@ -38,6 +38,8 @@
 
 #include <XmI/DebugUtil.h>
 
+#include <X11/CallbackI.h>
+
 static void class_initialize(void);
 static void class_part_initialize(WidgetClass w_class);
 static void initialize(Widget request, Widget new_w,
@@ -89,10 +91,6 @@
 				 XtCallbackProc posthook,
 				 XtPointer post_closure);
 
-/* undocumented, but export stuff from libXt */
-extern void _XtAddCallback(XtCallbackList *, XtCallbackProc, XtPointer);
-extern void _XtRemoveCallback(XtCallbackList *, XtCallbackProc, XtPointer);
-
 /*
  * resources 
  */
@@ -726,7 +724,7 @@
     /*
      * Add Callback
      */
-    _XtAddCallback(&Protocol_Callbacks(p), callback, closure);
+    _XtAddCallback((InternalCallbackList*)&Protocol_Callbacks(p), callback, closure);
 }
 
 
@@ -775,7 +773,7 @@
     /*
      * Remove Callback
      */
-    _XtRemoveCallback(&Protocol_Callbacks(p), callback, closure);
+    _XtRemoveCallback((InternalCallbackList*)&Protocol_Callbacks(p), callback, closure);
 }
 
 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/RenderTable.c lesstif-0.95.2/lib/Xm-2.1/RenderTable.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/RenderTable.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/RenderTable.c	2012-08-23 18:10:11 +0200
@@ -286,7 +286,7 @@
 	/* Assign defaults */
 	r->font = (XFontSet)XmAS_IS;
 	r->font_name = NULL;	/* instead of XmAS_IS */
-	r->type = XmAS_IS;
+	r->type = (XmFontType)XmAS_IS;
 	r->rendition_foreground = XmAS_IS;
 	r->rendition_background = XmAS_IS;
 	r->load_model = XmAS_IS;
@@ -374,9 +374,9 @@
 #ifdef	USE_XFT
 		if (strcmp(al[i].name, XmNrenditionForeground) == 0) {
 			/* XftColor */
-			from.addr = &al[i].value;
+			from.addr = (XPointer)&al[i].value;
 			from.size = sizeof(XtPointer);
-			to.addr = &r->xft_foreground;
+			to.addr = (XPointer)&r->xft_foreground;
 			to.size = sizeof(XftColor);
 
 			ok = XtConvertAndStore(w,
@@ -385,9 +385,9 @@
 		} else
 		if (strcmp(al[i].name, XmNrenditionBackground) == 0) {
 			/* XftColor */
-			from.addr = &al[i].value;
+			from.addr = (XPointer)&al[i].value;
 			from.size = sizeof(XtPointer);
-			to.addr = &r->xft_background;
+			to.addr = (XPointer)&r->xft_background;
 			to.size = sizeof(XftColor);
 			ok = XtConvertAndStore(w,
 				XmRString, &from,
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ResConvert.c lesstif-0.95.2/lib/Xm-2.1/ResConvert.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ResConvert.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ResConvert.c	2012-08-23 18:10:11 +0200
@@ -3296,11 +3296,11 @@
 		return False;
 	}
 	if (to->addr == NULL)
-		to->addr = (XtPointer)&rt;
+		to->addr = (XPointer)&rt;
 	else
 		*(XmRenderTable *)(to->addr) = rt;
 
-	to->addr = (XtPointer)&rt;
+	to->addr = (XPointer)&rt;
 
 	DEBUGOUT(_LtDebug(__FILE__, w,
 		"_XmCvtStringToRenderTable -> %p, %d elements\n", rt, count));
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/RowColumn.c lesstif-0.95.2/lib/Xm-2.1/RowColumn.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/RowColumn.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/RowColumn.c	2012-08-23 18:10:12 +0200
@@ -1778,7 +1778,7 @@
 	Cardinal num_params = 0;
 
 	    event = (XEvent *)va_arg(arg_list, XtPointer);
-	    poppedUp = va_arg(arg_list, XtPointer);
+	    poppedUp = va_arg(arg_list, Boolean*);
 
 	    if (XmIsRowColumn(menu))
 	    {
@@ -1889,7 +1889,7 @@
 	Cardinal num_params = 0;
 
 	    event = (XEvent *)va_arg(arg_list, XtPointer);
-	    poppedUp = va_arg(arg_list, XtPointer);
+	    poppedUp = va_arg(arg_list, Boolean*);
 	    if (XmIsRowColumn(menu))
 	    {
 		shell = _XmGetRC_PopupPosted(menu);
@@ -2007,7 +2007,7 @@
 	    	menu = button;
 	    }
 	    event = (XEvent *)va_arg(arg_list, XtPointer);
-	    validButton = va_arg(arg_list, XtPointer);
+	    validButton = va_arg(arg_list, Boolean*);
 	    DEBUGOUT(_LtDebug0("MENU", w, "\t%s\n",
 	    	_LtDebugEventType2String(event->type)
 	    	));
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Sash.c lesstif-0.95.2/lib/Xm-2.1/Sash.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Sash.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Sash.c	2012-08-23 18:10:12 +0200
@@ -162,7 +162,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmSash_defTranslations,
+	/* tm_table              */ (String)_XmSash_defTranslations,
 	/* query_geometry        */ NULL /* query_geometry */,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)&_XmSashCoreClassExtRec
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ScrollBar.c lesstif-0.95.2/lib/Xm-2.1/ScrollBar.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ScrollBar.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ScrollBar.c	2012-08-23 18:10:12 +0200
@@ -442,7 +442,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersionDontCheck,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmScrollBar_defaultTranslations /*NULL*/,
+	/* tm_table              */ (String)_XmScrollBar_defaultTranslations /*NULL*/,
 	/* query_geometry        */ NULL /* query_geometry */,
 	/* display_accelerator   */ NULL,
 	/* extension             */ (XtPointer)&_XmScrollBarCoreClassExtRec
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ScrolledW.c lesstif-0.95.2/lib/Xm-2.1/ScrolledW.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ScrolledW.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ScrolledW.c	2012-08-23 18:10:12 +0200
@@ -332,7 +332,7 @@
     },
     /* XmManager class part */
     {
-        /* translations                 */ _XmScrolledW_ScrolledWindowXlations,
+        /* translations                 */ (String)_XmScrolledW_ScrolledWindowXlations,
         /* syn_resources                */ syn_resources,
         /* num_syn_resources            */ XtNumber(syn_resources),
         /* syn_constraint_resources     */ NULL,
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Selection.c lesstif-0.95.2/lib/Xm-2.1/Selection.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Selection.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Selection.c	2012-08-23 18:10:12 +0200
@@ -242,7 +242,7 @@
     	source_string = _XmStringSourceGetString( (XmTextWidget)wid2,
 	    	    	    	left_tp, right_tp, False );
     	status = XmbTextListToTextProperty( XtDisplay(wid2), &source_string,
-	    	    	    	    	  1, 0, (XTextProperty*)&right_tp );
+	    	    	    	    	  1, (XICCEncodingStyle)0, (XTextProperty*)&right_tp );
     	XtFree( source_string );
     	if ( status == Success || status > 0 )
 	{
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/SpinBox.c lesstif-0.95.2/lib/Xm-2.1/SpinBox.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/SpinBox.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/SpinBox.c	2012-08-23 18:10:12 +0200
@@ -1486,7 +1486,7 @@
 		_XmWarning(t, "Version of trait record is %d not %d\n", trait->version, 0);
 	}
 
-	s = trait->getValue(t, XmFORMAT_WCS);
+	s = (char*)trait->getValue(t, XmFORMAT_WCS);
 	if (s == 0) {
 		_XmWarning(t, "XmSpinBoxValidatePosition TraitGetValue -> NULL : this shouldn't happen\n");
 		return XmCURRENT_VALUE;	/* Maybe the app doesn't crash if we do this */
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/TearOffB.c lesstif-0.95.2/lib/Xm-2.1/TearOffB.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/TearOffB.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/TearOffB.c	2012-08-23 18:10:12 +0200
@@ -183,7 +183,7 @@
     },
     /* Tear Off Button part */
     {
-       /* translations         */ _XmTearOffB_overrideTranslations,
+       /* translations         */ (String)_XmTearOffB_overrideTranslations,
     },
 };
 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Text.c lesstif-0.95.2/lib/Xm-2.1/Text.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Text.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Text.c	2012-08-23 18:10:12 +0200
@@ -585,7 +585,7 @@
     Text_TotalLines(w) = 1;
     Text_ForceDisplay(w) = -1;
     Text_Traversed(w) = False;
-    Text_OnOrOff(w) = False;
+    Text_OnOrOff(w) = (OnOrOff)False;
     Text_NewTop(w) = 0;
     Text_LastTopChar(w) = 0;
     Text_TopLine(w) = 0;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/TextF.c lesstif-0.95.2/lib/Xm-2.1/TextF.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/TextF.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/TextF.c	2012-08-23 18:10:12 +0200
@@ -604,7 +604,7 @@
 	/* accept_focus          */ NULL,
 	/* version               */ XtVersion,
 	/* callback offsets      */ NULL,
-	/* tm_table              */ _XmTextF_EventBindings1,
+	/* tm_table              */ (String)_XmTextF_EventBindings1,
 	/* query_geometry        */ query_geometry,
 	/* display_accelerator   */ NULL /*XtInheritDisplayAccelerator*/,
 	/* extension             */ (XtPointer)NULL /*&_XmTextFCoreClassExtRec*/
@@ -932,7 +932,7 @@
 			height = TextF_XftFont(w)->height;
 		} else {
 			if (w->text.font_list->renditions[0]->type == XmFONT_IS_FONT) {
-				XFontStruct *fs = w->text.font_list->renditions[0]->font;
+				XFontStruct *fs = (XFontStruct*)w->text.font_list->renditions[0]->font;
 				width_erase = 2 * fs->max_bounds.width;
 				height = fs->max_bounds.ascent
 				+ fs->max_bounds.descent;
@@ -2939,7 +2939,7 @@
 		l = TextF_Highlight(w).list[1].position;
 		r = TextF_Highlight(w).list[2].position;
 
-		DrawText(w, l, r, True);
+		DrawText(w, l, r, (XmHighlightMode)True);
 	}
 }
 
@@ -3528,7 +3528,7 @@
 		w->text.has_primary = False;
 		if (TextF_Echo(w) && TextF_HighlightStart(w) >= 0) {
 			CursorErase(w);
-			DrawText(w, TextF_HighlightStart(w), TextF_HighlightEnd(w), False);
+			DrawText(w, TextF_HighlightStart(w), TextF_HighlightEnd(w), (XmHighlightMode)False);
 			CursorDraw(w);
 		}
 		TextF_HighlightStart(w) = TextF_HighlightEnd(w) = -1;
@@ -6527,7 +6527,7 @@
         if(TextF_Echo(w))
         {
 	    CursorErase(w);
-	    DrawText(w, TextF_HighlightStart(w), TextF_HighlightEnd(w), False);
+	    DrawText(w, TextF_HighlightStart(w), TextF_HighlightEnd(w), (XmHighlightMode)False);
 	    CursorDraw(w);
         }
         /* SG 23/08/1998 parts of this code check start == -1 to see
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/TextIn.c lesstif-0.95.2/lib/Xm-2.1/TextIn.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/TextIn.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/TextIn.c	2012-08-23 18:10:12 +0200
@@ -1153,7 +1153,7 @@
                             char *buf;
 
                             buf = XtMalloc(*len + 1);
-                            strncpy((char *)buf, value, *len);
+                            strncpy((char *)buf, (char*)value, *len);
                             buf[*len] = '\0';
 
                             XmbTextListToTextProperty(XtDisplay(w), &buf, 1,
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/TextOut.c lesstif-0.95.2/lib/Xm-2.1/TextOut.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/TextOut.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/TextOut.c	2012-08-23 18:10:12 +0200
@@ -844,7 +844,7 @@
 		    drawTo ++;
 		    }
 #endif
-		(*Text_Output(w)->Draw)(w, i, first, drawTo, highlight);
+		(*Text_Output(w)->Draw)(w, i, first, drawTo, (XmHighlightMode)highlight);
 		first = np;
 
 		/* Find the next change */
@@ -868,7 +868,7 @@
 		     endPos ++;
 		     }
 		(*Text_Output(w)->Draw)(w, i, first, endPos,
-			highlight);
+			(XmHighlightMode)highlight);
 	    }
 	}
 	else
@@ -879,13 +879,13 @@
 			/*CP:16 May 1999: this point is reached only for lines which
 			** are inside a selection area, so also include the newline. */
 		(*Text_Output(w)->Draw)(w, i, line->start, next->start,
-			highlight);
+			(XmHighlightMode)highlight);
 	    }
 	    else if ( (  line->start == next->start - 1 ) &&
 	    		highlight != XmHIGHLIGHT_NORMAL )
 	    {
 		(*Text_Output(w)->Draw)(w, i, line->start, next->start,
-			highlight);
+			(XmHighlightMode)highlight);
 	    }
 	}
     }
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ToggleB.c lesstif-0.95.2/lib/Xm-2.1/ToggleB.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ToggleB.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ToggleB.c	2012-08-23 18:10:12 +0200
@@ -1774,7 +1774,7 @@
 	 * be explicitly set to True.
 	 */
 	val->size = sizeof(Pixel);
-	val->addr = (XtPointer)&CoreBackground(w);
+	val->addr = (XPointer)&CoreBackground(w);
 #if 0
 	if (DefaultDepth(XtDisplay(w), 0) == 1) {	/* Mono */
 	} else {					/* Colour */
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/ToggleBG.c lesstif-0.95.2/lib/Xm-2.1/ToggleBG.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/ToggleBG.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/ToggleBG.c	2012-08-23 18:10:12 +0200
@@ -2201,12 +2201,12 @@
 	 * be explicitly set to True.
 	 */
 	val->size = sizeof(Pixel);
-	val->addr = (XtPointer)&CoreBackground(w);
+	val->addr = (XPointer)&CoreBackground(w);
 
 #define XmParentBackgroundPixel(w) (((XmManagerWidget) \
         (((XmGadget)(w))->object.parent))->core.background_pixel)
 
-	val->addr = (XtPointer)&XmParentBackgroundPixel(w);
+	val->addr = (XPointer)&XmParentBackgroundPixel(w);
 #if 0
 	if (DefaultDepth(XtDisplay(w), 0) == 1) {	/* Mono */
 	} else {					/* Colour */
Files lesstif-0.95.2.orig/lib/Xm-2.1/Transltns.o and lesstif-0.95.2/lib/Xm-2.1/Transltns.o differ
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/UniqueEvent.c lesstif-0.95.2/lib/Xm-2.1/UniqueEvent.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/UniqueEvent.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/UniqueEvent.c	2012-08-23 18:10:12 +0200
@@ -64,14 +64,14 @@
     case ButtonPress:
     case ButtonRelease:
 
-	*p = XtRealloc(*p, sizeof(XButtonEvent));
+	*p = XtRealloc((char*)*p, sizeof(XButtonEvent));
 	memcpy(*p, event, sizeof(XButtonEvent));
 
 	break;
     case KeyPress:
     case KeyRelease:
 
-	*p = XtRealloc(*p, sizeof(XKeyEvent));
+	*p = XtRealloc((char*)*p, sizeof(XKeyEvent));
 	memcpy(*p, event, sizeof(XKeyEvent));
 
 	break;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Vendor.c lesstif-0.95.2/lib/Xm-2.1/Vendor.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Vendor.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Vendor.c	2012-08-24 07:47:34 +0200
@@ -71,6 +71,11 @@
 #include <Xm/TraitP.h>
 
 #include <XmI/DebugUtil.h>
+#include <X11/CallbackI.h>
+
+#ifndef	XtCXtToolkitError
+#define	XtCXtToolkitError	"XtToolkitError"
+#endif
 
 #if defined(__EMX__) || defined(__CYGWIN__)
 extern void _LtXmFixupVendorShell(void);
@@ -82,17 +87,6 @@
 #endif
 #endif
 
-/* We use a 'private', i.e. non-declared, but actually exported call
-    from the original Intrinsic sources (lib/Xt/Callback.c) here.
-    Note that we don't give the precise prototype:
- */
-extern void 
-_XtRemoveCallback (
-    /* InternalCallbackList   *callbacks, */
-    void               *callbacks,
-    XtCallbackProc	callback,
-    XtPointer		closure);
-
 /***************************************************************************
  *
  * Vendor shell class record
@@ -902,7 +896,6 @@
     XmWidgetExtData ed;
     Cardinal size;
     XtPointer nsec, rsec;
-    extern void _XtAddCallback(XtCallbackList *, XtCallbackProc, XtPointer);
 
     Display_ShellCount(d)++;
 
@@ -956,7 +949,7 @@
 
     _XmExtImportArgs((Widget)nsec, args, num_args);
 
-    _XtAddCallback(&VSEP_RealizeCallback(ed->widget),
+    _XtAddCallback((InternalCallbackList*)&VSEP_RealizeCallback(ed->widget),
 		   _XmVendorExtRealize, NULL);
 
     /*
@@ -1131,7 +1124,7 @@
 
 	/* This removes all protocols and destroys the associated extension object */
 	_XmDestroyProtocols(shell);
-	_XtRemoveCallback(&VSEP_RealizeCallback(w), _XmVendorExtRealize, NULL);
+	_XtRemoveCallback((InternalCallbackList*)&VSEP_RealizeCallback(w), _XmVendorExtRealize, NULL);
 	XtFree((char *)w);
 }
 
@@ -2280,10 +2273,13 @@
     unsigned int mask = request->request_mode;
     XEvent event;
     Boolean wm;
+	#ifdef __cplusplus
+	WMShellPart::_OldXSizeHints *hintp = NULL;
+	#else
     struct _OldXSizeHints *hintp = NULL;
+	#endif
     int oldx, oldy, oldwidth, oldheight, oldborder_width;
     unsigned long request_num;
-    extern String XtCXtToolkitError;
 
     if (XtIsWMShell(wid))
     {
@@ -2556,6 +2552,10 @@
 }
 QueryStruct;
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* A prototype for a private libXt function ... */
 extern int _XtWaitForSomething(XtAppContext app,
 			       _XtBoolean ignoreEvents,
@@ -2568,6 +2568,11 @@
 #endif
 			       unsigned long *howlong);
 
+#ifdef __cplusplus
+} // extern "C"
+#endif
+
+
 /* amai: citing the docs, e.g. from
  *     ftp://ftp.x.org/pub/R6.6/xc/lib/Xt/NextEvent.c
  * for that
@@ -2742,10 +2747,13 @@
     unsigned int mask = request->request_mode;
     XEvent event;
     Boolean wm;
+	#ifdef __cplusplus
+	WMShellPart::_OldXSizeHints *hintp = NULL;
+	#else
     struct _OldXSizeHints *hintp = NULL;
+	#endif
     int oldx, oldy, oldwidth, oldheight, oldborder_width;
     unsigned long request_num;
-    extern String XtCXtToolkitError;
 
     if (XtIsWMShell(gw))
     {
Files lesstif-0.95.2.orig/lib/Xm-2.1/Vendor.o and lesstif-0.95.2/lib/Xm-2.1/Vendor.o differ
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/VirtKeys.c lesstif-0.95.2/lib/Xm-2.1/VirtKeys.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/VirtKeys.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/VirtKeys.c	2012-08-23 18:10:12 +0200
@@ -191,14 +191,14 @@
  */
 static XmDefaultBindingStringRec defaultBindings[] =
 {
-    {"The XFree86 Project, Inc", _XmVirtKeys_pcFallbackBindingString},
-    {"Hewlett-Packard Company", _XmVirtKeys_hpFallbackBindingString},
+    {"The XFree86 Project, Inc", (String)_XmVirtKeys_pcFallbackBindingString},
+    {"Hewlett-Packard Company", (String)_XmVirtKeys_hpFallbackBindingString},
     {"International Business Machines",
-     _XmVirtKeys_ibmFallbackBindingString},
-    {"Silicon Graphics Inc.", _XmVirtKeys_sgiFallbackBindingString},
-    {"Silicon Graphics", _XmVirtKeys_sgiFallbackBindingString},
+     (String)_XmVirtKeys_ibmFallbackBindingString},
+    {"Silicon Graphics Inc.", (String)_XmVirtKeys_sgiFallbackBindingString},
+    {"Silicon Graphics", (String)_XmVirtKeys_sgiFallbackBindingString},
     {"X11/NeWS - Sun Microsystems Inc.",
-     _XmVirtKeys_sunFallbackBindingString},
+     (String)_XmVirtKeys_sunFallbackBindingString},
 };
 
 /*
@@ -767,7 +767,7 @@
     Cardinal i;
 
     VendorString = XServerVendor(Dsp);
-    BindingString = _XmVirtKeys_fallbackBindingString;
+    BindingString = (String)_XmVirtKeys_fallbackBindingString;
     for (i = 0; i < XtNumber(defaultBindings); i++)
     {
 	if (strcmp(VendorString, defaultBindings[i].vendorName) == 0)
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XmIm.c lesstif-0.95.2/lib/Xm-2.1/XmIm.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XmIm.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XmIm.c	2012-08-23 18:10:12 +0200
@@ -31,6 +31,10 @@
 #include <stdarg.h>
 #include <string.h>
 
+#ifdef WIN32
+# include <X11/Xwindows.h>
+#endif
+
 #include <X11/Intrinsic.h>
 #include <X11/Xos.h>
 #include <X11/Xlocale.h> /* don't #include <locale.h> here! */
@@ -1064,7 +1068,7 @@
 		DEBUGOUT(_LtDebug(__FILE__, w, "XCloseIM(%p)\n", stuff->xim));
 		stuff->orig_xim->xim = NULL;
 		/* stuff->orig_xim is now useless */
-		XtFree(stuff->orig_xim);
+		XtFree((char*)stuff->orig_xim);
 	} else {
 		DEBUGOUT(_LtDebug(__FILE__, w, "XmImCloseXIM(%p), count -> %d\n",
 			stuff->xim, stuff->orig_xim->count));
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XmStrDefs.c lesstif-0.95.2/lib/Xm-2.1/XmStrDefs.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XmStrDefs.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XmStrDefs.c	2012-08-23 18:10:12 +0200
@@ -1392,3 +1392,5 @@
 /* 19960 */ "50_foreground\0"
 /* 19974 */ "unspecified_pixmap\0"
 "\0";
+
+char** myptr = (char**)&_XmStrings;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XmString.c lesstif-0.95.2/lib/Xm-2.1/XmString.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XmString.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XmString.c	2012-08-23 18:10:12 +0200
@@ -5326,8 +5326,8 @@
 		for (i=0; i<parse_count; i++) {
 			if (parse_table[0][i].pattern == NULL)
 				continue;
-			len = strlen(parse_table[0][i].pattern);
-			if (strncmp(p, parse_table[0][i].pattern, len) == 0) {
+			len = strlen((char*)parse_table[0][i].pattern);
+			if (strncmp(p, (char*)parse_table[0][i].pattern, len) == 0) {
 				if (start) {
 					/* Append */
 					tmp = XtMalloc(p - start + 1);
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xme.c lesstif-0.95.2/lib/Xm-2.1/Xme.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xme.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xme.c	2012-08-23 18:10:12 +0200
@@ -48,12 +48,7 @@
 #include <Xm/SpecRenderT.h>
 
 #include <XmI/DebugUtil.h>
-
-
-/* required prototypes of exported, but private Intrinsic stuff: */
-extern void _XtAddCallback(XtCallbackList *, XtCallbackProc, XtPointer);
-extern void _XtRemoveCallback(XtCallbackList *, XtCallbackProc, XtPointer);
-
+#include <X11/CallbackI.h>
 
 /* DragIcon */
 extern Widget
@@ -217,7 +212,7 @@
     ExtObj_LogicalParent(nsec) = w;
     ExtObj_ExtensionType(nsec) = XmSHELL_EXTENSION;
 
-    _XtAddCallback(&VSEP_FocusMovedCallback(nsec),
+    _XtAddCallback((InternalCallbackList*)&VSEP_FocusMovedCallback(nsec),
 		   cp, udata);
     XtFree((char *)nsec);
 }
@@ -251,7 +246,7 @@
     ExtObj_LogicalParent(nsec) = w;
     ExtObj_ExtensionType(nsec) = XmSHELL_EXTENSION;
 
-    _XtRemoveCallback(&VSEP_FocusMovedCallback(nsec),
+    _XtRemoveCallback((InternalCallbackList*)&VSEP_FocusMovedCallback(nsec),
                       cp, udata);
     XtFree((char *)nsec);
 }
@@ -347,7 +342,7 @@
 		return XmeGetDefaultRenderTableFromFixedFont(w);
 
 	for (p=XtParent(w); p; p = XtParent(p))
-		if ((t = XmeTraitGet(p, XmQTspecifyRenderTable)))
+		if ((t = (XmSpecRenderTrait)XmeTraitGet(p, XmQTspecifyRenderTable)))
 			break;
 
 	if (! t)
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmAttrib.c lesstif-0.95.2/lib/Xm-2.1/XpmAttrib.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmAttrib.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmAttrib.c	2012-08-23 18:10:12 +0200
@@ -96,10 +96,7 @@
  * Create a colortable compatible with the old style colortable
  */
 static int
-CreateOldColorTable(ct, ncolors, oldct)
-    XpmColor *ct;
-    unsigned int ncolors;
-    XpmColor ***oldct;
+CreateOldColorTable(XpmColor* ct, unsigned int ncolors, XpmColor*** oldct)
 {
     XpmColor **colorTable, **color;
     unsigned int a;
@@ -119,9 +116,7 @@
 }
 
 static void
-FreeOldColorTable(colorTable, ncolors)
-    XpmColor **colorTable;
-    unsigned int ncolors;
+FreeOldColorTable(XpmColor** colorTable, unsigned int ncolors)
 {
     unsigned int a, b;
     XpmColor **color;
@@ -144,9 +139,7 @@
  * Free the computed color table
  */
 void
-xpmFreeColorTable(colorTable, ncolors)
-    XpmColor *colorTable;
-    int ncolors;
+xpmFreeColorTable(XpmColor* colorTable, int ncolors)
 {
     int a, b;
     XpmColor *color;
@@ -166,9 +159,7 @@
  * Free array of extensions
  */
 void
-XpmFreeExtensions(extensions, nextensions)
-    XpmExtension *extensions;
-    int nextensions;
+XpmFreeExtensions(XpmExtension* extensions, int nextensions)
 {
     unsigned int i, j, nlines;
     XpmExtension *ext;
@@ -203,8 +194,7 @@
  * Init returned data to free safely later on
  */
 void
-xpmInitAttributes(attributes)
-    XpmAttributes *attributes;
+xpmInitAttributes(XpmAttributes* attributes)
 {
     if (attributes) {
 	attributes->pixels = NULL;
@@ -231,10 +221,7 @@
  * Fill in the XpmAttributes with the XpmImage and the XpmInfo
  */
 void
-xpmSetAttributes(attributes, image, info)
-    XpmAttributes *attributes;
-    XpmImage *image;
-    XpmInfo *info;
+xpmSetAttributes(XpmAttributes* attributes, XpmImage* image, XpmInfo* info)
 {
     if (attributes->valuemask & XpmReturnColorTable) {
 	attributes->colorTable = image->colorTable;
@@ -301,8 +288,7 @@
  * but the structure itself
  */
 void
-XpmFreeAttributes(attributes)
-    XpmAttributes *attributes;
+XpmFreeAttributes(XpmAttributes* attributes)
 {
     if (attributes->valuemask & XpmReturnPixels && attributes->npixels) {
 	XpmFree(attributes->pixels);
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrBufFrI.c lesstif-0.95.2/lib/Xm-2.1/XpmCrBufFrI.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrBufFrI.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrBufFrI.c	2012-08-23 18:10:12 +0200
@@ -106,12 +106,7 @@
 LFUNC(CommentsSize, int, (XpmInfo *info));
 
 int
-XpmCreateBufferFromImage(display, buffer_return, image, shapeimage, attributes)
-    Display *display;
-    char **buffer_return;
-    XImage *image;
-    XImage *shapeimage;
-    XpmAttributes *attributes;
+XpmCreateBufferFromImage(Display* display, char** buffer_return, XImage* image, XImage* shapeimage, XpmAttributes* attributes)
 {
     XpmImage xpmimage;
     XpmInfo info;
@@ -152,10 +147,7 @@
 }while(0)
 
 int
-XpmCreateBufferFromXpmImage(buffer_return, image, info)
-    char **buffer_return;
-    XpmImage *image;
-    XpmInfo *info;
+XpmCreateBufferFromXpmImage(char** buffer_return, XpmImage* image, XpmInfo* info)
 {
     /* calculation variables */
     int ErrorStatus;
@@ -318,13 +310,7 @@
 
 
 static int
-WriteColors(dataptr, data_size, used_size, colors, ncolors, cpp)
-    char **dataptr;
-    unsigned int *data_size;
-    unsigned int *used_size;
-    XpmColor *colors;
-    unsigned int ncolors;
-    unsigned int cpp;
+WriteColors(char** dataptr, unsigned int *data_size, unsigned int *used_size, XpmColor* colors, unsigned int ncolors, unsigned int cpp)
 {
     char buf[BUFSIZ] = {0};
     unsigned int a, key, l;
@@ -376,15 +362,7 @@
 }
 
 static void
-WritePixels(dataptr, data_size, used_size, width, height, cpp, pixels, colors)
-    char *dataptr;
-    unsigned int data_size;
-    unsigned int *used_size;
-    unsigned int width;
-    unsigned int height;
-    unsigned int cpp;
-    unsigned int *pixels;
-    XpmColor *colors;
+WritePixels(char* dataptr, unsigned int data_size, unsigned int *used_size, unsigned int width, unsigned int height, unsigned int cpp, unsigned int* pixels, XpmColor* colors)
 {
     char *s = dataptr;
     unsigned int x, y, h;
@@ -419,9 +397,7 @@
 }
 
 static unsigned int
-ExtensionsSize(ext, num)
-    XpmExtension *ext;
-    unsigned int num;
+ExtensionsSize(XpmExtension* ext, unsigned int num)
 {
     unsigned int x, y, a, size;
     char **line;
@@ -444,12 +420,7 @@
 }
 
 static void
-WriteExtensions(dataptr, data_size, used_size, ext, num)
-    char *dataptr;
-    unsigned int data_size;
-    unsigned int *used_size;
-    XpmExtension *ext;
-    unsigned int num;
+WriteExtensions(char* dataptr, unsigned int data_size, unsigned int* used_size, XpmExtension* ext, unsigned int num)
 {
     unsigned int x, y, a;
     char **line;
@@ -479,8 +450,7 @@
 }
 
 static int
-CommentsSize(info)
-    XpmInfo *info;
+CommentsSize(XpmInfo* info)
 {
     int size = 0;
 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrBufFrP.c lesstif-0.95.2/lib/Xm-2.1/XpmCrBufFrP.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrBufFrP.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrBufFrP.c	2012-08-23 18:10:12 +0200
@@ -85,13 +85,8 @@
 #endif
 
 int
-XpmCreateBufferFromPixmap(display, buffer_return, pixmap, shapemask,
-			  attributes)
-    Display *display;
-    char **buffer_return;
-    Pixmap pixmap;
-    Pixmap shapemask;
-    XpmAttributes *attributes;
+XpmCreateBufferFromPixmap(Display* display, char**buffer_return, Pixmap pixmap, Pixmap shapemask,
+			  XpmAttributes* attributes)
 {
     XImage *ximage = NULL;
     XImage *shapeimage = NULL;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrDatFrI.c lesstif-0.95.2/lib/Xm-2.1/XpmCrDatFrI.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrDatFrI.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrDatFrI.c	2012-08-23 18:10:12 +0200
@@ -106,12 +106,7 @@
 			       unsigned int ext_nlines));
 
 int
-XpmCreateDataFromImage(display, data_return, image, shapeimage, attributes)
-    Display *display;
-    char ***data_return;
-    XImage *image;
-    XImage *shapeimage;
-    XpmAttributes *attributes;
+XpmCreateDataFromImage(Display* display, char*** data_return, XImage* image, XImage* shapeimage, XpmAttributes* attributes)
 {
     XpmImage xpmimage;
     XpmInfo info;
@@ -149,10 +144,7 @@
 } while(0)
 
 int
-XpmCreateDataFromXpmImage(data_return, image, info)
-    char ***data_return;
-    XpmImage *image;
-    XpmInfo *info;
+XpmCreateDataFromXpmImage(char*** data_return, XpmImage* image, XpmInfo* info)
 {
     /* calculation variables */
     int ErrorStatus;
@@ -291,12 +283,7 @@
 }
 
 static int
-CreateColors(dataptr, data_size, colors, ncolors, cpp)
-    char **dataptr;
-    unsigned int *data_size;
-    XpmColor *colors;
-    unsigned int ncolors;
-    unsigned int cpp;
+CreateColors(char** dataptr, unsigned int* data_size, XpmColor* colors, unsigned int ncolors, unsigned int cpp)
 {
     char buf[BUFSIZ];
     unsigned int a, key, l;
@@ -342,14 +329,7 @@
 }
 
 static void
-CreatePixels(dataptr, data_size, width, height, cpp, pixels, colors)
-    char **dataptr;
-    unsigned int data_size;
-    unsigned int width;
-    unsigned int height;
-    unsigned int cpp;
-    unsigned int *pixels;
-    XpmColor *colors;
+CreatePixels(char** dataptr, unsigned int data_size, unsigned int width, unsigned int height, unsigned int cpp, unsigned int* pixels, XpmColor* colors)
 {
     char *s;
     unsigned int x, y, h, offset;
@@ -392,11 +372,7 @@
 }
 
 static void
-CountExtensions(ext, num, ext_size, ext_nlines)
-    XpmExtension *ext;
-    unsigned int num;
-    unsigned int *ext_size;
-    unsigned int *ext_nlines;
+CountExtensions(XpmExtension* ext, unsigned int num, unsigned int* ext_size, unsigned int* ext_nlines)
 {
     unsigned int x, y, a, size, nlines;
     char **line;
@@ -418,13 +394,7 @@
 }
 
 static void
-CreateExtensions(dataptr, data_size, offset, ext, num, ext_nlines)
-    char **dataptr;
-    unsigned int data_size;
-    unsigned int offset;
-    XpmExtension *ext;
-    unsigned int num;
-    unsigned int ext_nlines;
+CreateExtensions(char** dataptr, unsigned int data_size, unsigned int offset, XpmExtension* ext, unsigned int num, unsigned int ext_nlines)
 {
     unsigned int x, y, a, b;
     char **line;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrDatFrP.c lesstif-0.95.2/lib/Xm-2.1/XpmCrDatFrP.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrDatFrP.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrDatFrP.c	2012-08-23 18:10:12 +0200
@@ -85,12 +85,7 @@
 #endif
 
 int
-XpmCreateDataFromPixmap(display, data_return, pixmap, shapemask, attributes)
-    Display *display;
-    char ***data_return;
-    Pixmap pixmap;
-    Pixmap shapemask;
-    XpmAttributes *attributes;
+XpmCreateDataFromPixmap(Display* display, char*** data_return, Pixmap pixmap, Pixmap shapemask, XpmAttributes* attributes)
 {
     XImage *ximage = NULL;
     XImage *shapeimage = NULL;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrBuf.c lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrBuf.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrBuf.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrBuf.c	2012-08-23 18:10:12 +0200
@@ -87,13 +87,12 @@
 LFUNC(OpenBuffer, void, (char *buffer, xpmData *mdata));
 
 int
-XpmCreateImageFromBuffer(display, buffer, image_return,
-			 shapeimage_return, attributes)
-    Display *display;
-    char *buffer;
-    XImage **image_return;
-    XImage **shapeimage_return;
-    XpmAttributes *attributes;
+XpmCreateImageFromBuffer(
+    Display *display,
+    char *buffer,
+    XImage **image_return,
+    XImage **shapeimage_return,
+    XpmAttributes *attributes)
 {
     XpmImage image;
     XpmInfo info;
@@ -130,10 +129,10 @@
 }
 
 int
-XpmCreateXpmImageFromBuffer(buffer, image, info)
-    char *buffer;
-    XpmImage *image;
-    XpmInfo *info;
+XpmCreateXpmImageFromBuffer(
+    char *buffer,
+    XpmImage *image,
+    XpmInfo *info)
 {
     xpmData mdata;
     int ErrorStatus;
@@ -155,9 +154,9 @@
  * open the given buffer to be read or written as an xpmData which is returned
  */
 static void
-OpenBuffer(buffer, mdata)
-    char *buffer;
-    xpmData *mdata;
+OpenBuffer(
+    char *buffer,
+    xpmData *mdata)
 {
     mdata->type = XPMBUFFER;
     mdata->cptr = buffer;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrDat.c lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrDat.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrDat.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrDat.c	2012-08-23 18:10:12 +0200
@@ -87,13 +87,12 @@
 LFUNC(OpenArray, void, (char **data, xpmData *mdata));
 
 int
-XpmCreateImageFromData(display, data, image_return,
-		       shapeimage_return, attributes)
-    Display *display;
-    char **data;
-    XImage **image_return;
-    XImage **shapeimage_return;
-    XpmAttributes *attributes;
+XpmCreateImageFromData(
+    Display *display,
+    char **data,
+    XImage **image_return,
+    XImage **shapeimage_return,
+    XpmAttributes *attributes)
 {
     XpmImage image;
     XpmInfo info;
@@ -130,10 +129,10 @@
 }
 
 int
-XpmCreateXpmImageFromData(data, image, info)
-    char **data;
-    XpmImage *image;
-    XpmInfo *info;
+XpmCreateXpmImageFromData(
+    char **data,
+    XpmImage *image,
+    XpmInfo *info)
 {
     xpmData mdata;
     int ErrorStatus;
@@ -155,9 +154,9 @@
  * open the given array to be read or written as an xpmData which is returned
  */
 static void
-OpenArray(data, mdata)
-    char **data;
-    xpmData *mdata;
+OpenArray(
+    char **data,
+    xpmData *mdata)
 {
     mdata->type = XPMARRAY;
     mdata->stream.data = data;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrP.c lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrP.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrIFrP.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrIFrP.c	2012-08-23 18:10:12 +0200
@@ -85,12 +85,12 @@
 #endif
 
 void
-xpmCreateImageFromPixmap(display, pixmap, ximage_return, width, height)
-    Display *display;
-    Pixmap pixmap;
-    XImage **ximage_return;
-    unsigned int *width;
-    unsigned int *height;
+xpmCreateImageFromPixmap(
+    Display *display,
+    Pixmap pixmap,
+    XImage **ximage_return,
+    unsigned int *width,
+    unsigned int *height)
 {
     unsigned int dum;
     int dummy;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrBuf.c lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrBuf.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrBuf.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrBuf.c	2012-08-23 18:10:12 +0200
@@ -85,14 +85,13 @@
 #endif
 
 int
-XpmCreatePixmapFromBuffer(display, d, buffer, pixmap_return,
-			  shapemask_return, attributes)
-    Display *display;
-    Drawable d;
-    char *buffer;
-    Pixmap *pixmap_return;
-    Pixmap *shapemask_return;
-    XpmAttributes *attributes;
+XpmCreatePixmapFromBuffer(
+    Display *display,
+    Drawable d,
+    char *buffer,
+    Pixmap *pixmap_return,
+    Pixmap *shapemask_return,
+    XpmAttributes *attributes)
 {
     XImage *ximage, *shapeimage;
     int ErrorStatus;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrDat.c lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrDat.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrDat.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrDat.c	2012-08-23 18:10:12 +0200
@@ -85,14 +85,13 @@
 #endif
 
 int
-XpmCreatePixmapFromData(display, d, data, pixmap_return,
-			shapemask_return, attributes)
-    Display *display;
-    Drawable d;
-    char **data;
-    Pixmap *pixmap_return;
-    Pixmap *shapemask_return;
-    XpmAttributes *attributes;
+XpmCreatePixmapFromData(
+    Display *display,
+    Drawable d,
+    char **data,
+    Pixmap *pixmap_return,
+    Pixmap *shapemask_return,
+    XpmAttributes *attributes)
 {
     XImage *ximage, *shapeimage;
     int ErrorStatus;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrI.c lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrI.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmCrPFrI.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmCrPFrI.c	2012-08-23 18:10:12 +0200
@@ -85,11 +85,11 @@
 #endif
 
 void
-xpmCreatePixmapFromImage(display, d, ximage, pixmap_return)
-    Display *display;
-    Drawable d;
-    XImage *ximage;
-    Pixmap *pixmap_return;
+xpmCreatePixmapFromImage(
+    Display *display,
+    Drawable d,
+    XImage *ximage,
+    Pixmap *pixmap_return)
 {
     GC gc;
     XGCValues values;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmImage.c lesstif-0.95.2/lib/Xm-2.1/XpmImage.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmImage.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmImage.c	2012-08-23 18:10:12 +0200
@@ -88,8 +88,8 @@
  * Init returned data to free safely later on
  */
 void
-xpmInitXpmImage(image)
-    XpmImage *image;
+xpmInitXpmImage(
+    XpmImage *image)
 {
     image->ncolors = 0;
     image->colorTable = NULL;
@@ -100,8 +100,8 @@
  * Free the XpmImage data which have been allocated
  */
 void
-XpmFreeXpmImage(image)
-    XpmImage *image;
+XpmFreeXpmImage(
+    XpmImage *image)
 {
     if (image->colorTable)
 	xpmFreeColorTable(image->colorTable, image->ncolors);
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmInfo.c lesstif-0.95.2/lib/Xm-2.1/XpmInfo.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmInfo.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmInfo.c	2012-08-23 18:10:12 +0200
@@ -88,8 +88,8 @@
  * Init returned data to free safely later on
  */
 void
-xpmInitXpmInfo(info)
-    XpmInfo *info;
+xpmInitXpmInfo(
+    XpmInfo *info)
 {
     if (info) {
 	info->hints_cmt = NULL;
@@ -104,8 +104,8 @@
  * Free the XpmInfo data which have been allocated
  */
 void
-XpmFreeXpmInfo(info)
-    XpmInfo *info;
+XpmFreeXpmInfo(
+    XpmInfo *info)
 {
     if (info) {
 	if (info->valuemask & XpmComments) {
@@ -135,9 +135,9 @@
  * Set the XpmInfo valuemask to retrieve required info
  */
 void
-xpmSetInfoMask(info, attributes)
-    XpmInfo *info;
-    XpmAttributes *attributes;
+xpmSetInfoMask(
+    XpmInfo *info,
+    XpmAttributes *attributes)
 {
     info->valuemask = 0;
     if (attributes->valuemask & XpmReturnInfos)
@@ -150,9 +150,9 @@
  * Fill in the XpmInfo with the XpmAttributes
  */
 void
-xpmSetInfo(info, attributes)
-    XpmInfo *info;
-    XpmAttributes *attributes;
+xpmSetInfo(
+    XpmInfo *info,
+    XpmAttributes *attributes)
 {
     info->valuemask = 0;
     if (attributes->valuemask & XpmInfos) {
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToBuf.c lesstif-0.95.2/lib/Xm-2.1/XpmRdFToBuf.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToBuf.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmRdFToBuf.c	2012-08-23 18:10:12 +0200
@@ -92,13 +92,13 @@
 #endif
 
 #include <sys/stat.h>
-#if !defined(FOR_MSW) && !defined(WIN32)
+#if !defined(FOR_MSW) && (!defined(WIN32) || defined(__PARITY__))
 #include <unistd.h>
 #endif
 #ifndef VAX11C
 #include <fcntl.h>
 #endif
-#if defined(FOR_MSW) || defined(WIN32)
+#if defined(FOR_MSW) || (defined(WIN32) && !defined(__PARITY__))
 #include <io.h>
 #define stat _stat
 #define fstat _fstat
@@ -107,9 +107,9 @@
 #endif
 
 int
-XpmReadFileToBuffer(filename, buffer_return)
-    char *filename;
-    char **buffer_return;
+XpmReadFileToBuffer(
+    char *filename,
+    char **buffer_return)
 {
     int fd, fcheck;
     off_t len;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToDat.c lesstif-0.95.2/lib/Xm-2.1/XpmRdFToDat.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToDat.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmRdFToDat.c	2012-08-23 18:10:12 +0200
@@ -85,9 +85,9 @@
 #endif
 
 int
-XpmReadFileToData(filename, data_return)
-    char *filename;
-    char ***data_return;
+XpmReadFileToData(
+    char *filename,
+    char ***data_return)
 {
     XpmImage image;
     XpmInfo info;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToI.c lesstif-0.95.2/lib/Xm-2.1/XpmRdFToI.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToI.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmRdFToI.c	2012-08-23 18:10:12 +0200
@@ -70,6 +70,10 @@
 /* #if !defined(WITH_DBMALLOC) && !defined(WITH_DMALLOC) */
 #include <XmI/DebugUtil.h>
 
+#if defined(__PARITY__)
+# define NO_ZPIPE 1
+#endif
+
 #ifdef HAVE_STRLCAT
 # define STRLCAT(dst, src, dstsize) { \
  	if (strlcat(dst, src, dstsize) >= (dstsize)) \
@@ -103,13 +107,12 @@
 
 #ifndef CXPMPROG
 int
-XpmReadFileToImage(display, filename,
-		   image_return, shapeimage_return, attributes)
-    Display *display;
-    char *filename;
-    XImage **image_return;
-    XImage **shapeimage_return;
-    XpmAttributes *attributes;
+XpmReadFileToImage(
+    Display *display,
+    char *filename,
+    XImage **image_return,
+    XImage **shapeimage_return,
+    XpmAttributes *attributes)
 {
     XpmImage image;
     XpmInfo info;
@@ -148,10 +151,10 @@
 }
 
 int
-XpmReadFileToXpmImage(filename, image, info)
-    char *filename;
-    XpmImage *image;
-    XpmInfo *info;
+XpmReadFileToXpmImage(
+    char *filename,
+    XpmImage *image,
+    XpmInfo *info)
 {
     xpmData mdata;
     int ErrorStatus;
@@ -183,9 +186,9 @@
 #endif
 
 static int
-OpenReadFile(filename, mdata)
-    char *filename;
-    xpmData *mdata;
+OpenReadFile(
+    char *filename,
+    xpmData *mdata)
 {
 #ifndef NO_ZPIPE
     char buf[BUFSIZ];
@@ -270,8 +273,8 @@
  * close the file related to the xpmData if any
  */
 static void
-xpmDataClose(mdata)
-    xpmData *mdata;
+xpmDataClose(
+    xpmData *mdata)
 {
     switch (mdata->type) {
     case XPMFILE:
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToP.c lesstif-0.95.2/lib/Xm-2.1/XpmRdFToP.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmRdFToP.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmRdFToP.c	2012-08-23 18:10:12 +0200
@@ -85,14 +85,13 @@
 #endif
 
 int
-XpmReadFileToPixmap(display, d, filename, pixmap_return,
-		    shapemask_return, attributes)
-    Display *display;
-    Drawable d;
-    char *filename;
-    Pixmap *pixmap_return;
-    Pixmap *shapemask_return;
-    XpmAttributes *attributes;
+XpmReadFileToPixmap(
+    Display *display,
+    Drawable d,
+    char *filename,
+    Pixmap *pixmap_return,
+    Pixmap *shapemask_return,
+    XpmAttributes *attributes)
 {
     XImage *ximage, *shapeimage;
     int ErrorStatus;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrBuf.c lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrBuf.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrBuf.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrBuf.c	2012-08-23 18:10:12 +0200
@@ -87,9 +87,9 @@
 #endif
 
 int
-XpmWriteFileFromBuffer(filename, buffer)
-    char *filename;
-    char *buffer;
+XpmWriteFileFromBuffer(
+    char *filename,
+    char *buffer)
 {
     int fcheck, len;
     FILE *fp = fopen(filename, "w");
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrDat.c lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrDat.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrDat.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrDat.c	2012-08-23 18:10:12 +0200
@@ -85,9 +85,9 @@
 #endif
 
 int
-XpmWriteFileFromData(filename, data)
-    char *filename;
-    char **data;
+XpmWriteFileFromData(
+    char *filename,
+    char **data)
 {
     XpmImage image;
     XpmInfo info;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrI.c lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrI.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrI.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrI.c	2012-08-23 18:10:12 +0200
@@ -76,6 +76,10 @@
 /* #if !defined(WITH_DBMALLOC) && !defined(WITH_DMALLOC) */
 #include <XmI/DebugUtil.h>
 
+#if defined(__PARITY__)
+# define NO_ZPIPE 1
+#endif
+
 #ifdef HAVE_STRLCAT
 # define STRLCAT(dst, src, dstsize) { \
  	if (strlcat(dst, src, dstsize) >= (dstsize)) \
@@ -116,12 +120,12 @@
 LFUNC(xpmDataClose, void, (xpmData *mdata));
 
 int
-XpmWriteFileFromImage(display, filename, image, shapeimage, attributes)
-    Display *display;
-    char *filename;
-    XImage *image;
-    XImage *shapeimage;
-    XpmAttributes *attributes;
+XpmWriteFileFromImage(
+    Display *display,
+    char *filename,
+    XImage *image,
+    XImage *shapeimage,
+    XpmAttributes *attributes)
 {
     XpmImage xpmimage;
     XpmInfo info;
@@ -147,10 +151,10 @@
 }
 
 int
-XpmWriteFileFromXpmImage(filename, image, info)
-    char *filename;
-    XpmImage *image;
-    XpmInfo *info;
+XpmWriteFileFromXpmImage(
+    char *filename,
+    XpmImage *image,
+    XpmInfo *info)
 {
     xpmData mdata;
     char *name, *dot, *s, new_name[BUFSIZ] = {0};
@@ -211,11 +215,11 @@
 }
 
 static int
-xpmWriteFile(file, image, name, info)
-    FILE *file;
-    XpmImage *image;
-    char *name;
-    XpmInfo *info;
+xpmWriteFile(
+    FILE *file,
+    XpmImage *image,
+    char *name,
+    XpmInfo *info)
 {
     /* calculation variables */
     unsigned int cmts, extensions;
@@ -269,10 +273,10 @@
 }
 
 static void
-WriteColors(file, colors, ncolors)
-    FILE *file;
-    XpmColor *colors;
-    unsigned int ncolors;
+WriteColors(
+    FILE *file,
+    XpmColor *colors,
+    unsigned int ncolors)
 {
     unsigned int a, key;
     char *s;
@@ -293,13 +297,13 @@
 
 
 static int
-WritePixels(file, width, height, cpp, pixels, colors)
-    FILE *file;
-    unsigned int width;
-    unsigned int height;
-    unsigned int cpp;
-    unsigned int *pixels;
-    XpmColor *colors;
+WritePixels(
+    FILE *file,
+    unsigned int width,
+    unsigned int height,
+    unsigned int cpp,
+    unsigned int *pixels,
+    XpmColor *colors)
 {
     char *s, *p, *buf;
     unsigned int x, y, h;
@@ -337,10 +341,10 @@
 }
 
 static void
-WriteExtensions(file, ext, num)
-    FILE *file;
-    XpmExtension *ext;
-    unsigned int num;
+WriteExtensions(
+    FILE *file,
+    XpmExtension *ext,
+    unsigned int num)
 {
     unsigned int x, y, n;
     char **line;
@@ -363,9 +367,9 @@
 #	define s_popen popen
 #endif
 static int
-OpenWriteFile(filename, mdata)
-    char *filename;
-    xpmData *mdata;
+OpenWriteFile(
+    char *filename,
+    xpmData *mdata)
 {
 #ifndef NO_ZPIPE
     char buf[BUFSIZ];
@@ -414,8 +418,8 @@
  * close the file related to the xpmData if any
  */
 static void
-xpmDataClose(mdata)
-    xpmData *mdata;
+xpmDataClose(
+    xpmData *mdata)
 {
     switch (mdata->type) {
     case XPMFILE:
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrP.c lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrP.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/XpmWrFFrP.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/XpmWrFFrP.c	2012-08-23 18:10:12 +0200
@@ -85,12 +85,12 @@
 #endif
 
 int
-XpmWriteFileFromPixmap(display, filename, pixmap, shapemask, attributes)
-    Display *display;
-    char *filename;
-    Pixmap pixmap;
-    Pixmap shapemask;
-    XpmAttributes *attributes;
+XpmWriteFileFromPixmap(
+    Display *display,
+    char *filename,
+    Pixmap pixmap,
+    Pixmap shapemask,
+    XpmAttributes *attributes)
 {
     XImage *ximage = NULL;
     XImage *shapeimage = NULL;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmcreate.c lesstif-0.95.2/lib/Xm-2.1/Xpmcreate.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmcreate.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmcreate.c	2012-08-23 18:10:12 +0200
@@ -210,8 +210,7 @@
  * which does the trick
  */
 int
-xpmstrcasecmp(s1, s2)
-    register char *s1, *s2;
+xpmstrcasecmp(register char* s1, register char* s2)
 {
     register int c1, c2;
 
@@ -232,12 +231,11 @@
  * return the default color key related to the given visual
  */
 static int
-xpmVisualType(visual)
-    Visual *visual;
+xpmVisualType(Visual* visual)
 {
 #ifndef FOR_MSW
 # ifndef AMIGA
-    switch (visual->class) {
+    switch (visual->c_class) {
     case StaticGray:
     case GrayScale:
 	switch (visual->map_entries) {
@@ -282,12 +280,7 @@
  *   call XAllocColor and return 0 if failure, positive otherwise
  */
 static int
-AllocColor(display, colormap, colorname, xcolor, closure)
-    Display *display;
-    Colormap colormap;
-    char *colorname;
-    XColor *xcolor;
-    void *closure;		/* not used */
+AllocColor(Display* display, Colormap colormap, char* colorname, XColor* xcolor, void* closure)
 {
     int status;
     if (colorname)
@@ -305,21 +298,9 @@
  */
 
 static int
-SetCloseColor(display, colormap, visual, col, image_pixel, mask_pixel,
-	      alloc_pixels, nalloc_pixels, attributes, cols, ncols,
-	      allocColor, closure)
-    Display *display;
-    Colormap colormap;
-    Visual *visual;
-    XColor *col;
-    Pixel *image_pixel, *mask_pixel;
-    Pixel *alloc_pixels;
-    unsigned int *nalloc_pixels;
-    XpmAttributes *attributes;
-    XColor *cols;
-    int ncols;
-    XpmAllocColorFunc allocColor;
-    void *closure;
+SetCloseColor(Display* display, Colormap colormap, Visual* visual, XColor* col, Pixel* image_pixel, Pixel* mask_pixel,
+	      Pixel* alloc_pixels, unsigned int* nalloc_pixels, XpmAttributes* attributes, XColor* cols, int ncols,
+	      XpmAllocColorFunc allocColor, void* closure)
 {
 
     /*
@@ -462,7 +443,7 @@
 		XGrabServer(display);
 
 #if 0
-	    if (visual->class == DirectColor) {
+	    if (visual->c_class == DirectColor) {
 		/* TODO */
 	    } else
 #endif
@@ -490,26 +471,10 @@
  */
 
 static int
-SetColor(display, colormap, visual, colorname, color_index,
-	 image_pixel, mask_pixel, mask_pixel_index,
-	 alloc_pixels, nalloc_pixels, used_pixels, nused_pixels,
-	 attributes, cols, ncols, allocColor, closure)
-    Display *display;
-    Colormap colormap;
-    Visual *visual;
-    char *colorname;
-    unsigned int color_index;
-    Pixel *image_pixel, *mask_pixel;
-    unsigned int *mask_pixel_index;
-    Pixel *alloc_pixels;
-    unsigned int *nalloc_pixels;
-    Pixel *used_pixels;
-    unsigned int *nused_pixels;
-    XpmAttributes *attributes;
-    XColor *cols;
-    int ncols;
-    XpmAllocColorFunc allocColor;
-    void *closure;
+SetColor(Display* display, Colormap colormap, Visual* visual, char* colorname, unsigned int color_index,
+	 Pixel* image_pixel, Pixel* mask_pixel, unsigned int* mask_pixel_index,
+	 Pixel* alloc_pixels, unsigned int* nalloc_pixels, Pixel* used_pixels, unsigned int* nused_pixels,
+	 XpmAttributes* attributes, XColor* cols, int ncols, XpmAllocColorFunc allocColor, void* closure)
 {
     XColor xcolor;
     int status;
@@ -554,20 +519,9 @@
 
 
 static int
-CreateColors(display, attributes, colors, ncolors, image_pixels, mask_pixels,
-             mask_pixel_index, alloc_pixels, nalloc_pixels,
-             used_pixels, nused_pixels)
-    Display *display;
-    XpmAttributes *attributes;
-    XpmColor *colors;
-    unsigned int ncolors;
-    Pixel *image_pixels;
-    Pixel *mask_pixels;
-    unsigned int *mask_pixel_index;
-    Pixel *alloc_pixels;
-    unsigned int *nalloc_pixels;
-    Pixel *used_pixels;
-    unsigned int *nused_pixels;
+CreateColors(Display* display, XpmAttributes* attributes, XpmColor* colors, unsigned int ncolors, Pixel* image_pixels, Pixel* mask_pixels,
+             unsigned int* mask_pixel_index, Pixel* alloc_pixels, unsigned int* nalloc_pixels,
+             Pixel* used_pixels, unsigned int* nused_pixels)
 {
     /* variables stored in the XpmAttributes structure */
     Visual *visual;
@@ -626,7 +580,7 @@
     if (USE_CLOSECOLOR) {
 	/* originally from SetCloseColor */
 #if 0
-	if (visual->class == DirectColor) {
+	if (visual->c_class == DirectColor) {
 
 	    /*
 	     * TODO: Implement close colors for DirectColor visuals. This is
@@ -786,12 +740,7 @@
 
 /* default FreeColors function, simply call XFreeColors */
 static int
-FreeColors(display, colormap, pixels, n, closure)
-    Display *display;
-    Colormap colormap;
-    Pixel *pixels;
-    int n;
-    void *closure;		/* not used */
+FreeColors(Display* display, Colormap colormap, Pixel* pixels, int n, void* closure)
 {
     return XFreeColors(display, colormap, pixels, n, 0);
 }
@@ -808,13 +757,8 @@
 } while(0)
 
 int
-XpmCreateImageFromXpmImage(display, image,
-			   image_return, shapeimage_return, attributes)
-    Display *display;
-    XpmImage *image;
-    XImage **image_return;
-    XImage **shapeimage_return;
-    XpmAttributes *attributes;
+XpmCreateImageFromXpmImage(Display* display, XpmImage* image,
+			   XImage** image_return, XImage** shapeimage_return, XpmAttributes* attributes)
 {
     /* variables stored in the XpmAttributes structure */
     Visual *visual;
@@ -1020,14 +964,7 @@
  * Create an XImage with its data
  */
 static int
-CreateXImage(display, visual, depth, format, width, height, image_return)
-    Display *display;
-    Visual *visual;
-    unsigned int depth;
-    int format;
-    unsigned int width;
-    unsigned int height;
-    XImage **image_return;
+CreateXImage(Display* display, Visual* visual, unsigned int depth, int format, unsigned int width, unsigned int height, XImage** image_return)
 {
     int bitmap_pad;
 
@@ -1119,9 +1056,7 @@
 };
 
 static int
-_XReverse_Bytes(bpt, nb)
-    register unsigned char *bpt;
-    register unsigned int nb;
+_XReverse_Bytes(register unsigned char* bpt, register unsigned int nb)
 {
     do {
 	*bpt = _reverse_byte[*bpt];
@@ -1132,9 +1067,7 @@
 
 
 void
-xpm_xynormalizeimagebits(bp, img)
-    register unsigned char *bp;
-    register XImage *img;
+xpm_xynormalizeimagebits(register unsigned char* bp, register XImage* img)
 {
     register unsigned char c;
 
@@ -1162,9 +1095,7 @@
 }
 
 void
-xpm_znormalizeimagebits(bp, img)
-    register unsigned char *bp;
-    register XImage *img;
+xpm_znormalizeimagebits(register unsigned char* bp, register XImage* img)
 {
     register unsigned char c;
 
@@ -1207,13 +1138,7 @@
 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00};
 
 static void
-_putbits(src, dstoffset, numbits, dst)
-    register char *src;			/* address of source bit string */
-    int dstoffset;			/* bit offset into destination;
-					 * range is 0-31 */
-    register int numbits;		/* number of bits to copy to
-					 * destination */
-    register char *dst;			/* address of destination bit string */
+_putbits(register char* src, int dstoffset, register int numbits, register char* dst)
 {
     register unsigned char chlo, chhi;
     int hibits;
@@ -1255,12 +1180,7 @@
  */
 
 static void
-PutImagePixels(image, width, height, pixelindex, pixels)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+PutImagePixels(XImage* image, unsigned int width, unsigned int height, unsigned int* pixelindex, Pixel* pixels)
 {
     register char *src;
     register char *dst;
@@ -1342,12 +1262,7 @@
 */
 
 static void
-PutImagePixels32(image, width, height, pixelindex, pixels)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+PutImagePixels32(XImage* image, unsigned int width, unsigned int height, unsigned int* pixelindex, Pixel* pixels)
 {
     unsigned char *data;
     unsigned int *iptr;
@@ -1452,12 +1367,7 @@
  */
 
 static void
-PutImagePixels16(image, width, height, pixelindex, pixels)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+PutImagePixels16(XImage* image, unsigned int width, unsigned int height, unsigned int* pixelindex, Pixel* pixels)
 {
     unsigned char *data;
     unsigned int *iptr;
@@ -1533,12 +1443,7 @@
  */
 
 static void
-PutImagePixels8(image, width, height, pixelindex, pixels)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+PutImagePixels8(XImage* image, unsigned int width, unsigned int height, unsigned int* pixelindex, Pixel* pixels)
 {
     char *data;
     unsigned int *iptr;
@@ -1580,12 +1485,7 @@
  */
 
 static void
-PutImagePixels1(image, width, height, pixelindex, pixels)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+PutImagePixels1(XImage* image, unsigned int width, unsigned int height, unsigned int* pixelindex, Pixel* pixels)
 {
     if (image->byte_order != image->bitmap_bit_order)
 	PutImagePixels(image, width, height, pixelindex, pixels);
@@ -1694,14 +1594,8 @@
 }
 
 int
-XpmCreatePixmapFromXpmImage(display, d, image,
-			    pixmap_return, shapemask_return, attributes)
-    Display *display;
-    Drawable d;
-    XpmImage *image;
-    Pixmap *pixmap_return;
-    Pixmap *shapemask_return;
-    XpmAttributes *attributes;
+XpmCreatePixmapFromXpmImage(Display* display, Drawable d, XpmImage* image,
+			    Pixmap* pixmap_return, Pixmap* shapemask_return, XpmAttributes* attributes)
 {
     XImage *ximage, *shapeimage;
     int ErrorStatus;
@@ -1779,13 +1673,13 @@
 # endif/* AMIGA */
 #else  /* FOR_MSW part follows */
 static void
-MSWPutImagePixels(dc, image, width, height, pixelindex, pixels)
-    Display *dc;
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    unsigned int *pixelindex;
-    Pixel *pixels;
+MSWPutImagePixels(
+    Display *dc,
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    unsigned int *pixelindex,
+    Pixel *pixels)
 {
     unsigned int *data = pixelindex;
     unsigned int x, y;
@@ -1807,11 +1701,11 @@
 #if !defined(FOR_MSW) && !defined(AMIGA)
 
 static int
-PutPixel1(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel1(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     register char *src;
     register char *dst;
@@ -1842,11 +1736,11 @@
 }
 
 static int
-PutPixel(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     register char *src;
     register char *dst;
@@ -1881,11 +1775,11 @@
 
 #if !defined(WORD64) && !defined(LONG64)
 static int
-PutPixel32(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel32(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     unsigned char *addr;
 
@@ -1899,11 +1793,11 @@
 #endif
 
 static int
-PutPixel32MSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel32MSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     unsigned char *addr;
 
@@ -1919,11 +1813,11 @@
 }
 
 static int
-PutPixel32LSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel32LSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     unsigned char *addr;
 
@@ -1939,11 +1833,11 @@
 }
 
 static int
-PutPixel16MSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel16MSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     unsigned char *addr;
     
@@ -1957,11 +1851,11 @@
 }
 
 static int
-PutPixel16LSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel16LSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     unsigned char *addr;
     
@@ -1975,11 +1869,11 @@
 }
 
 static int
-PutPixel8(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel8(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     if(x < 0 || y < 0)
     	return 0;
@@ -1989,11 +1883,11 @@
 }
 
 static int
-PutPixel1MSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel1MSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     if(x < 0 || y < 0)
     	return 0;
@@ -2006,11 +1900,11 @@
 }
 
 static int
-PutPixel1LSB(ximage, x, y, pixel)
-    register XImage *ximage;
-    int x;
-    int y;
-    unsigned long pixel;
+PutPixel1LSB(
+    register XImage *ximage,
+    int x,
+    int y,
+    unsigned long pixel)
 {
     if(x < 0 || y < 0)
     	return 0;
@@ -2028,15 +1922,14 @@
  * This function parses an Xpm file or data and directly create an XImage
  */
 int
-xpmParseDataAndCreate(display, data, image_return, shapeimage_return,
-		      image, info, attributes)
-    Display *display;
-    xpmData *data;
-    XImage **image_return;
-    XImage **shapeimage_return;
-    XpmImage *image;
-    XpmInfo *info;
-    XpmAttributes *attributes;
+xpmParseDataAndCreate(
+    Display *display,
+    xpmData *data,
+    XImage **image_return,
+    XImage **shapeimage_return,
+    XpmImage *image,
+    XpmInfo *info,
+    XpmAttributes *attributes)
 {
     /* variables stored in the XpmAttributes structure */
     Visual *visual;
@@ -2367,24 +2260,19 @@
 static int
 ParseAndPutPixels(
 #ifdef FOR_MSW
-		  dc,
-#endif
-		  data, width, height, ncolors, cpp, colorTable, hashtable,
-		  image, image_pixels, shapeimage, shape_pixels)
-#ifdef FOR_MSW
-    Display *dc;
+    Display *dc,
 #endif
-    xpmData *data;
-    unsigned int width;
-    unsigned int height;
-    unsigned int ncolors;
-    unsigned int cpp;
-    XpmColor *colorTable;
-    xpmHashTable *hashtable;
-    XImage *image;
-    Pixel *image_pixels;
-    XImage *shapeimage;
-    Pixel *shape_pixels;
+    xpmData *data,
+    unsigned int width,
+    unsigned int height,
+    unsigned int ncolors,
+    unsigned int cpp,
+    XpmColor *colorTable,
+    xpmHashTable *hashtable,
+    XImage *image,
+    Pixel *image_pixels,
+    XImage *shapeimage,
+    Pixel *shape_pixels)
 {
     unsigned int a, x, y;
 
@@ -2409,7 +2297,7 @@
 	    if (ncolors > 256)
 		return (XpmFileInvalid);
 
-	    bzero((char *)colidx, 256 * sizeof(short));
+	    memset((char *)colidx,0, 256 * sizeof(short));
 	    for (a = 0; a < ncolors; a++)
 		colidx[(unsigned char)colorTable[a].string[0]] = a + 1;
 
@@ -2456,7 +2344,7 @@
 	    unsigned short *cidx[256];
 	    unsigned int char1;
 
-	    bzero((char *)cidx, 256 * sizeof(unsigned short *)); /* init */
+	    memset((char *)cidx,0, 256 * sizeof(unsigned short *)); /* init */
 	    for (a = 0; a < ncolors; a++) {
 		char1 = (unsigned char) colorTable[a].string[0];
 		if (cidx[char1] == NULL) { /* get new memory */
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmdata.c lesstif-0.95.2/lib/Xm-2.1/Xpmdata.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmdata.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmdata.c	2012-08-23 18:10:12 +0200
@@ -225,8 +225,8 @@
  * skip to the end of the current string and the beginning of the next one
  */
 int
-xpmNextString(data)
-    xpmData *data;
+xpmNextString(
+    xpmData *data)
 {
     if (!data->type)
 	data->cptr = (data->stream.data)[++data->line];
@@ -281,10 +281,10 @@
  * skip whitespace and return the following word
  */
 unsigned int
-xpmNextWord(data, buf, buflen)
-    xpmData *data;
-    char *buf;
-    unsigned int buflen;
+xpmNextWord(
+    xpmData *data,
+    char *buf,
+    unsigned int buflen)
 {
     register unsigned int n = 0;
     int c;
@@ -318,9 +318,9 @@
  * returns 1 if one is found and 0 if not
  */
 int
-xpmNextUI(data, ui_return)
-    xpmData *data;
-    unsigned int *ui_return;
+xpmNextUI(
+    xpmData *data,
+    unsigned int *ui_return)
 {
     char buf[BUFSIZ];
     int l;
@@ -333,10 +333,10 @@
  * return end of string - WARNING: malloc!
  */
 int
-xpmGetString(data, sptr, l)
-    xpmData *data;
-    char **sptr;
-    unsigned int *l;
+xpmGetString(
+    xpmData *data,
+    char **sptr,
+    unsigned int *l)
 {
     unsigned int i, n = 0;
     int c;
@@ -417,9 +417,9 @@
  * get the current comment line
  */
 int
-xpmGetCmt(data, cmt)
-    xpmData *data;
-    char **cmt;
+xpmGetCmt(
+    xpmData *data,
+    char **cmt)
 {
     if (!data->type)
 	*cmt = NULL;
@@ -446,8 +446,8 @@
  * parse xpm header
  */
 int
-xpmParseHeader(data)
-    xpmData *data;
+xpmParseHeader(
+    xpmData *data)
 {
     char buf[BUFSIZ+1] = {0};
     int l, n = 0;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmhashtab.c lesstif-0.95.2/lib/Xm-2.1/Xpmhashtab.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmhashtab.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmhashtab.c	2012-08-23 18:10:12 +0200
@@ -89,9 +89,9 @@
 LFUNC(HashTableGrows, int, (xpmHashTable * table));
 
 static xpmHashAtom
-AtomMake(name, data)			/* makes an atom */
-    char *name;				/* WARNING: is just pointed to */
-    void *data;
+AtomMake(
+    char *name,				/* WARNING: is just pointed to */
+    void *data)
 {
     xpmHashAtom object = (xpmHashAtom) XpmMalloc(sizeof(struct _xpmHashAtom));
 
@@ -154,9 +154,9 @@
  */
 
 xpmHashAtom *
-xpmHashSlot(table, s)
-    xpmHashTable *table;
-    char *s;
+xpmHashSlot(
+    xpmHashTable *table,
+    char *s)
 {
     xpmHashAtom *atomTable = table->atomTable;
     unsigned int hash;
@@ -181,8 +181,8 @@
 }
 
 static int
-HashTableGrows(table)
-    xpmHashTable *table;
+HashTableGrows(
+    xpmHashTable *table)
 {
     xpmHashAtom *atomTable = table->atomTable;
     unsigned int size = table->size;
@@ -218,10 +218,10 @@
  */
 
 int
-xpmHashIntern(table, tag, data)
-    xpmHashTable *table;
-    char *tag;
-    void *data;
+xpmHashIntern(
+    xpmHashTable *table,
+    char *tag,
+    void *data)
 {
     xpmHashAtom *slot;
 
@@ -247,8 +247,8 @@
  */
 
 int
-xpmHashTableInit(table)
-    xpmHashTable *table;
+xpmHashTableInit(
+    xpmHashTable *table)
 {
     xpmHashAtom *p;
     xpmHashAtom *atomTable;
@@ -272,8 +272,8 @@
  */
 
 void
-xpmHashTableFree(table)
-    xpmHashTable *table;
+xpmHashTableFree(
+    xpmHashTable *table)
 {
     xpmHashAtom *p;
     xpmHashAtom *atomTable = table->atomTable;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmmisc.c lesstif-0.95.2/lib/Xm-2.1/Xpmmisc.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmmisc.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmmisc.c	2012-08-23 18:10:12 +0200
@@ -90,8 +90,8 @@
  * which does the trick
  */
 char *
-xpmstrdup(s1)
-    char *s1;
+xpmstrdup(
+    char *s1)
 {
     char *s2;
     size_t l = strlen(s1) + 1;
@@ -104,10 +104,10 @@
 #endif
 
 unsigned int
-xpmatoui(p, l, ui_return)
-    register char *p;
-    unsigned int l;
-    unsigned int *ui_return;
+xpmatoui(
+    register char *p,
+    unsigned int l,
+    unsigned int *ui_return)
 {
     register unsigned int n, i;
 
@@ -129,8 +129,8 @@
  * Function returning a character string related to an error code.
  */
 char *
-XpmGetErrorString(errcode)
-    int errcode;
+XpmGetErrorString(
+    int errcode)
 {
     switch (errcode) {
     case XpmColorError:
@@ -167,8 +167,8 @@
 #endif
 
 void
-XpmFree(ptr)
-    void *ptr;
+XpmFree(
+    void *ptr)
 {
     free(ptr);
 }
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmparse.c lesstif-0.95.2/lib/Xm-2.1/Xpmparse.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmparse.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmparse.c	2012-08-23 18:10:12 +0200
@@ -109,12 +109,11 @@
 };
 
 int
-xpmParseValues(data, width, height, ncolors, cpp,
-	    x_hotspot, y_hotspot, hotspot, extensions)
-    xpmData *data;
-    unsigned int *width, *height, *ncolors, *cpp;
-    unsigned int *x_hotspot, *y_hotspot, *hotspot;
-    unsigned int *extensions;
+xpmParseValues(
+    xpmData *data,
+    unsigned int *width, unsigned int*height, unsigned int*ncolors, unsigned int*cpp,
+    unsigned int *x_hotspot, unsigned int*y_hotspot, unsigned int*hotspot,
+    unsigned int *extensions)
 {
     unsigned int l;
     char buf[BUFSIZ + 1];
@@ -219,12 +218,12 @@
 }
 
 int
-xpmParseColors(data, ncolors, cpp, colorTablePtr, hashtable)
-    xpmData *data;
-    unsigned int ncolors;
-    unsigned int cpp;
-    XpmColor **colorTablePtr;
-    xpmHashTable *hashtable;
+xpmParseColors(
+    xpmData *data,
+    unsigned int ncolors,
+    unsigned int cpp,
+    XpmColor **colorTablePtr,
+    xpmHashTable *hashtable)
 {
     unsigned int key = 0, l, a, b, len;
     unsigned int curkey;		/* current color key */
@@ -392,15 +391,15 @@
 }
 
 static int
-ParsePixels(data, width, height, ncolors, cpp, colorTable, hashtable, pixels)
-    xpmData *data;
-    unsigned int width;
-    unsigned int height;
-    unsigned int ncolors;
-    unsigned int cpp;
-    XpmColor *colorTable;
-    xpmHashTable *hashtable;
-    unsigned int **pixels;
+ParsePixels(
+    xpmData *data,
+    unsigned int width,
+    unsigned int height,
+    unsigned int ncolors,
+    unsigned int cpp,
+    XpmColor *colorTable,
+    xpmHashTable *hashtable,
+    unsigned int **pixels)
 {
     unsigned int *iptr, *iptr2 = NULL; /* found by Egbert Eich */
     unsigned int a, x, y;
@@ -436,7 +435,7 @@
 		return (XpmFileInvalid);
 	    }
 
-	    bzero((char *)colidx, 256 * sizeof(short));
+	    memset((char *)colidx,0, 256 * sizeof(short));
 	    for (a = 0; a < ncolors; a++)
 		colidx[(unsigned char)colorTable[a].string[0]] = a + 1;
 
@@ -472,7 +471,7 @@
 	    unsigned short *cidx[256];
 	    unsigned int char1;
 
-	    bzero((char *)cidx, 256 * sizeof(unsigned short *)); /* init */
+	    memset((char *)cidx,0, 256 * sizeof(unsigned short *)); /* init */
 	    for (a = 0; a < ncolors; a++) {
 		char1 = (unsigned char) colorTable[a].string[0];
 		if (cidx[char1] == NULL) { /* get new memory */
@@ -565,10 +564,10 @@
 }
 
 int
-xpmParseExtensions(data, extensions, nextensions)
-    xpmData *data;
-    XpmExtension **extensions;
-    unsigned int *nextensions;
+xpmParseExtensions(
+    xpmData *data,
+    XpmExtension **extensions,
+    unsigned int *nextensions)
 {
     XpmExtension *exts = NULL, *ext;
     unsigned int num = 0;
@@ -686,10 +685,10 @@
  * in an an XpmImage structure which is returned.
  */
 int
-xpmParseData(data, image, info)
-    xpmData *data;
-    XpmImage *image;
-    XpmInfo *info;
+xpmParseData(
+    xpmData *data,
+    XpmImage *image,
+    XpmInfo *info)
 {
     /* variables to return */
     unsigned int width, height, ncolors, cpp;
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmrgb.c lesstif-0.95.2/lib/Xm-2.1/Xpmrgb.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmrgb.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmrgb.c	2012-08-23 18:10:12 +0200
@@ -103,9 +103,9 @@
  * number of entries stored.
  */
 int
-xpmReadRgbNames(rgb_fname, rgbn)
-    char *rgb_fname;
-    xpmRgbName rgbn[];
+xpmReadRgbNames(
+    char *rgb_fname,
+    xpmRgbName rgbn[])
 
 {
     FILE *rgbf;
@@ -165,10 +165,10 @@
  * Return the color name corresponding to the given rgb values
  */
 char *
-xpmGetRgbName(rgbn, rgbn_max, red, green, blue)
-    xpmRgbName rgbn[];			/* rgb mnemonics from rgb text file */
-    int rgbn_max;			/* number of rgb mnemonics in table */
-    int red, green, blue;		/* rgb values */
+xpmGetRgbName(
+    xpmRgbName rgbn[],			/* rgb mnemonics from rgb text file */
+    int rgbn_max,			/* number of rgb mnemonics in table */
+    int red, int green, int blue)		/* rgb values */
 
 {
     int i;
@@ -191,9 +191,9 @@
  * Free the strings which have been malloc'ed in xpmReadRgbNames
  */
 void
-xpmFreeRgbNames(rgbn, rgbn_max)
-    xpmRgbName rgbn[];
-    int rgbn_max;
+xpmFreeRgbNames(
+    xpmRgbName rgbn[],
+    int rgbn_max)
 
 {
     int i;
@@ -209,9 +209,9 @@
 #include "rgbtab.h"			/* hard coded rgb.txt table */
 
 int
-xpmReadRgbNames(rgb_fname, rgbn)
-    char *rgb_fname;
-    xpmRgbName rgbn[];
+xpmReadRgbNames(
+    char *rgb_fname,
+    xpmRgbName rgbn[])
 {
     /*
      * check for consistency???
@@ -225,11 +225,11 @@
  * which has something like #0303 for one color
  */
 char *
-xpmGetRgbName(rgbn, rgbn_max, red, green, blue)
-    xpmRgbName rgbn[];			/* rgb mnemonics from rgb text file
+xpmGetRgbName(
+    xpmRgbName rgbn[],			/* rgb mnemonics from rgb text file
 					 * not used */
-    int rgbn_max;			/* not used */
-    int red, green, blue;		/* rgb values */
+    int rgbn_max,			/* not used */
+    int red, int green, int blue)		/* rgb values */
 
 {
     int i;
@@ -249,9 +249,9 @@
 
 /* used in XParseColor in simx.c */
 int
-xpmGetRGBfromName(inname, r, g, b)
-    char *inname;
-    int *r, *g, *b;
+xpmGetRGBfromName(
+    char *inname,
+    int *r, int*g, int*b)
 {
     int left, right, middle;
     int cmp;
@@ -321,9 +321,9 @@
 }
 
 void
-xpmFreeRgbNames(rgbn, rgbn_max)
-    xpmRgbName rgbn[];
-    int rgbn_max;
+xpmFreeRgbNames(
+    xpmRgbName rgbn[],
+    int rgbn_max)
 
 {
     /* nothing to do */
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpms_popen.c lesstif-0.95.2/lib/Xm-2.1/Xpms_popen.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpms_popen.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpms_popen.c	2012-08-23 18:10:12 +0200
@@ -37,6 +37,7 @@
 **                calling strtok()
 */
 
+#ifndef __PARITY__
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <stdio.h>
@@ -178,4 +179,5 @@
 
   }
 }
+#endif
 
diff -ru lesstif-0.95.2.orig/lib/Xm-2.1/Xpmscan.c lesstif-0.95.2/lib/Xm-2.1/Xpmscan.c
--- lesstif-0.95.2.orig/lib/Xm-2.1/Xpmscan.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/lib/Xm-2.1/Xpmscan.c	2012-08-23 18:10:12 +0200
@@ -170,10 +170,10 @@
  * if not large enough.
  */
 static int
-storePixel(pixel, pmap, index_return)
-    Pixel pixel;
-    PixelsMap *pmap;
-    unsigned int *index_return;
+storePixel(
+    Pixel pixel,
+    PixelsMap *pmap,
+    unsigned int *index_return)
 {
     unsigned int i;
     Pixel *p;
@@ -205,10 +205,10 @@
 }
 
 static int
-storeMaskPixel(pixel, pmap, index_return)
-    Pixel pixel;
-    PixelsMap *pmap;
-    unsigned int *index_return;
+storeMaskPixel(
+    Pixel pixel,
+    PixelsMap *pmap,
+    unsigned int *index_return)
 {
     if (!pixel) {
 	if (!pmap->ncolors) {
@@ -235,13 +235,12 @@
  * the given XpmImage structure.
  */
 int
-XpmCreateXpmImageFromImage(display, image, shapeimage,
-			   xpmimage, attributes)
-    Display *display;
-    XImage *image;
-    XImage *shapeimage;
-    XpmImage *xpmimage;
-    XpmAttributes *attributes;
+XpmCreateXpmImageFromImage(
+    Display *display,
+    XImage *image,
+    XImage *shapeimage,
+    XpmImage *xpmimage,
+    XpmAttributes *attributes)
 {
     /* variables stored in the XpmAttributes structure */
     unsigned int cpp;
@@ -411,10 +410,10 @@
 }
 
 static int
-ScanTransparentColor(color, cpp, attributes)
-    XpmColor *color;
-    unsigned int cpp;
-    XpmAttributes *attributes;
+ScanTransparentColor(
+    XpmColor *color,
+    unsigned int cpp,
+    XpmAttributes *attributes)
 {
     char *s;
     unsigned int a, b, c;
@@ -467,14 +466,14 @@
 }
 
 static int
-ScanOtherColors(display, colors, ncolors, pixels, mask, cpp, attributes)
-    Display *display;
-    XpmColor *colors;
-    unsigned int ncolors;
-    Pixel *pixels;
-    unsigned int mask;
-    unsigned int cpp;
-    XpmAttributes *attributes;
+ScanOtherColors(
+    Display *display,
+    XpmColor *colors,
+    unsigned int ncolors,
+    Pixel *pixels,
+    unsigned int mask,
+    unsigned int cpp,
+    XpmAttributes *attributes)
 {
     /* variables stored in the XpmAttributes structure */
     Colormap colormap;
@@ -662,11 +661,11 @@
  */
 
 static int
-GetImagePixels(image, width, height, pmap)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
+GetImagePixels(
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap)
 {
     char *src;
     char *dst;
@@ -768,11 +767,11 @@
 #endif
 
 static int
-GetImagePixels32(image, width, height, pmap)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
+GetImagePixels32(
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap)
 {
     unsigned char *addr;
     unsigned char *data;
@@ -833,11 +832,11 @@
  */
 
 static int
-GetImagePixels16(image, width, height, pmap)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
+GetImagePixels16(
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap)
 {
     unsigned char *addr;
     unsigned char *data;
@@ -879,11 +878,11 @@
  */
 
 static int
-GetImagePixels8(image, width, height, pmap)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
+GetImagePixels8(
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap)
 {
     unsigned int *iptr;
     unsigned char *data;
@@ -912,12 +911,12 @@
  */
 
 static int
-GetImagePixels1(image, width, height, pmap, storeFunc)
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
-    storeFuncPtr storeFunc;
+GetImagePixels1(
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap,
+    storeFuncPtr storeFunc)
 {
     unsigned int *iptr;
     unsigned int x, y;
@@ -1002,13 +1001,13 @@
 # endif/* AMIGA */
 #else  /* ndef FOR_MSW */
 static int
-MSWGetImagePixels(display, image, width, height, pmap, storeFunc)
-    Display *display;
-    XImage *image;
-    unsigned int width;
-    unsigned int height;
-    PixelsMap *pmap;
-    int (*storeFunc) ();
+MSWGetImagePixels(
+    Display *display,
+    XImage *image,
+    unsigned int width,
+    unsigned int height,
+    PixelsMap *pmap,
+    int (*storeFunc) ())
 {
     unsigned int *iptr;
     unsigned int x, y;
@@ -1032,13 +1031,12 @@
 #ifndef FOR_MSW
 # ifndef AMIGA
 int
-XpmCreateXpmImageFromPixmap(display, pixmap, shapemask,
-			    xpmimage, attributes)
-    Display *display;
-    Pixmap pixmap;
-    Pixmap shapemask;
-    XpmImage *xpmimage;
-    XpmAttributes *attributes;
+XpmCreateXpmImageFromPixmap(
+    Display *display,
+    Pixmap pixmap,
+    Pixmap shapemask,
+    XpmImage *xpmimage,
+    XpmAttributes *attributes)
 {
     XImage *ximage = NULL;
     XImage *shapeimage = NULL;
diff -ru lesstif-0.95.2.orig/scripts/man2html.c lesstif-0.95.2/scripts/man2html.c
--- lesstif-0.95.2.orig/scripts/man2html.c	2012-08-24 07:46:03 +0200
+++ lesstif-0.95.2/scripts/man2html.c	2012-08-23 18:10:12 +0200
@@ -261,15 +261,15 @@
 static char
 *strgrow(char *old, int len) 
 {
-  char *new;
+  char *_new;
   
 /*  fprintf(stderr, "strlen(old)=%i\n", strlen(old)); */
-  new = realloc(old, (strlen(old) + len + 1) * sizeof(char));
-  if (!new) {
+  _new = (char*)realloc(old, (strlen(old) + len + 1) * sizeof(char));
+  if (!_new) {
     fprintf(stderr, "man2html: out of memory");
     exit(EXIT_FAILURE);
   }
-  return new;  
+  return _new;  
 }
 
 
@@ -277,12 +277,12 @@
 *stralloc(int len)
 {					
   /* allocate enough for len + NULL */
-  char *new = malloc((len + 1) * sizeof(char));
-  if (!new) {
+  char *_new = (char*)malloc((len + 1) * sizeof(char));
+  if (!_new) {
     fprintf(stderr, "man2html: out of memory");
     exit(EXIT_FAILURE);
   }
-  return new;
+  return _new;
 }
 
 
@@ -293,10 +293,10 @@
 /* Some systems don't have strdup so lets use our own - which can also
  * check for out of memory. 
  */
-  char *new = stralloc(strlen(from));
+  char *_new = stralloc(strlen(from));
 
-  strcpy(new, from);
-  return new;
+  strcpy(_new, from);
+  return _new;
 }
 
 
@@ -321,7 +321,7 @@
    including string in system() or similar call. */
 {
   int i,j = 0;
-  static char new[NULL_TERMINATED(MED_STR_MAX)];
+  static char _new[NULL_TERMINATED(MED_STR_MAX)];
 
   if (strlen(str) * 2 + 1 > MED_STR_MAX) {
     fprintf(stderr, 
@@ -334,14 +334,14 @@
     if (!( ((str[i] >= 'A') && (str[i] <= 'Z')) ||
            ((str[i] >= 'a') && (str[i] <= 'z')) ||
            ((str[i] >= '0') && (str[i] <= '9')) )) {
-      new[j] = '\\';
+      _new[j] = '\\';
       j++;
     }
-    new[j] = str[i];
+    _new[j] = str[i];
     j++;
   }
-  new[j] = '\0';
-  return new;
+  _new[j] = '\0';
+  return _new;
 }                      
 
 
@@ -1029,7 +1029,7 @@
       while (*c) {
 	  if (buffpos>=buffmax) {
 	      char *h;
-	      h=realloc(buffer, buffmax*2);
+	      h=(char*)realloc(buffer, buffmax*2);
 	      if (!h) exit(1);
 	      buffer=h;
 	      buffmax=buffmax*2;
